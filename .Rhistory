if(transdat$StatusDate1[i]==1 & transdat$StatusDate2[i]==0) time1<-transdat$StartDateDate1[i]
#If dead on 1st census, time2=#ofdaydate1, time1=14 (all plants checked after 2 weeks and still alive)
if(transdat$StatusDate1[i]==0) time2<-transdat$StartDateDate1[i]
if(transdat$StatusDate1[i]==0) time1<-14
alltime1<-c(alltime1,time1)
alltime2<-c(alltime2,time2)
}
transdat$DaysDeath=DaysDeath
transdat$time1=as.numeric(alltime1)
transdat$time2=alltime2
#separate out species
tsmedat<-transdat[transdat$Species=="TSME",]
tshedat<-transdat[transdat$Species=="TSHE",]
abamdat<-transdat[transdat$Species=="ABAM",]
tsmedat$PlantedStand=factor(tsmedat$PlantedStand)
tshedat$PlantedStand=factor(tshedat$PlantedStand)
abamdat$PlantedStand=factor(abamdat$PlantedStand)
tsmedat$OriginStand=factor(tsmedat$OriginStand)
tshedat$OriginStand=factor(tshedat$OriginStand)
abamdat$OriginStand=factor(abamdat$OriginStand)
tsmedat$Block=factor(tsmedat$Block)
tshedat$Block=factor(tshedat$Block)
abamdat$Block=factor(abamdat$Block)
####Look at root to crown height (RtCrnHeightDate5, measured only on the last census to avoid soil disturbance) and height from soil surface to apical bud tip on the same date (HeightDate5; this is the way that height was measured on alll other censuses)
cor(transdat$HeightDate5,transdat$RtCrnHeightDate5, use="pairwise.complete.obs")#0.867
summary(lm(transdat$HeightDate5~transdat$RtCrnHeightDate5))#p<0.001
#Check for elevational patterns in difference between these two heights
transdat$heightdif=transdat$RtCrnHeightDate5-transdat$HeightDate5
summary(lmer(heightdif~-1+PlantedStand + (1|Block), data=transdat))
mean(transdat$heightdif, na.rm=T)
sd(transdat$heightdif, na.rm=T)
constmod.abam<-survreg(Surv(time1,time2, type="interval2")~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory, dist="lognormal", data=abamdat)
#TSME
constmod.tsme<-survreg(Surv(time1,time2, type="interval2")~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory, dist="lognormal", data=tsmedat)
#TSHE
constmod.tshe<-survreg(Surv(time1,time2, type="interval2")~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory, dist="lognormal", data=tshedat)
Anova(constmod.tsme, test.statistic="LR", type="III")
Anova(constmod.abam, test.statistic="LR", type="III")
Anova(constmod.tshe,test.statistic="LR", type="III")
####Species-specific mixed models for annual height increment
#ABAM
consthimod.abam<-lmer(annhi ~ PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory+(1|Block),REML=FALSE, data=abamdat,contrasts=c(unordered="contr.sum", ordered="contr.poly"))
consthimod.tsme<-lmer(annhi~ PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory+(1|Block),REML=FALSE, data=tsmedat,contrasts=c(unordered="contr.sum", ordered="contr.poly"))
consthimod.tshe<-lmer(annhi~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory+(1|Block),REML=FALSE, data=tshedat,contrasts=c(unordered="contr.sum", ordered="contr.poly"))
Anova(consthimod.tsme, type="III")
Anova(consthimod.abam, type="III")
Anova(consthimod.tshe,type="III")
#Proportion variance explained for each vital rate
propdev.tsmesurv=cbind(rownames(anova(constmod.tsme)),round(anova(constmod.tsme)$Dev/(anova(constmod.tsme)$"-2*LL"[1]-anova(constmod.tsme)$"-2*LL"[12]),digits=3))
propdev.tshesurv=cbind(rownames(anova(constmod.tshe)),round(anova(constmod.tshe)$Dev/(anova(constmod.tshe)$"-2*LL"[1]-anova(constmod.tshe)$"-2*LL"[12]),digits=3))
propdev.abamsurv=cbind(rownames(anova(constmod.abam)),round(anova(constmod.abam)$Dev/(anova(constmod.abam)$"-2*LL"[1]-anova(constmod.abam)$"-2*LL"[12]),digits=3))
propdev.tsmehi=cbind(rownames(anova(consthimod.tsme)),round(anova(consthimod.tsme)$"Sum Sq"/sum(anova(consthimod.tsme)$"Sum Sq"),digits=3))
propdev.tshehi=cbind(rownames(anova(consthimod.tshe)),round(anova(consthimod.tshe)$"Sum Sq"/sum(anova(consthimod.tshe)$"Sum Sq"),digits=3))
propdev.abamhi=cbind(rownames(anova(consthimod.abam)),round(anova(consthimod.abam)$"Sum Sq"/sum(anova(consthimod.abam)$"Sum Sq"),digits=3))
#Figure 2 (deviance/variance explained by each factor in the models)
propdev.tsmeall=cbind(propdev.tsmesurv[2:12,1],c(0,propdev.tsmegerm[2,2],propdev.tsmegerm[1,2],0,0,0,0,propdev.tsmegerm[3,2],0,0,0),propdev.tsmesurv[2:12,2],propdev.tsmehi[,2])
colnames(propdev.tsmeall)=c("Predictor","Germination","Survival","Growth")
propdev.tsmeall[,2:4]=as.numeric(propdev.tsmeall[,2:4])
propdev.abamall=cbind(propdev.abamsurv[2:12,1],c(propdev.abamgerm[2,2],propdev.abamgerm[3,2],propdev.abamgerm[1,2],0,propdev.abamgerm[4,2],0,0,0,0,0,0),propdev.abamsurv[2:12,2],propdev.abamhi[,2])
colnames(propdev.abamall)=c("Predictor","Germination","Survival","Growth")
propdev.abamall[,2:4]=as.numeric(propdev.abamall[,2:4])
propdev.tsheall=cbind(propdev.tshesurv[2:12,1],c(propdev.tshegerm[1:2,2],0,0,propdev.tshegerm[3,2],0,0,0,0,0,0),propdev.tshesurv[2:12,2],propdev.tshehi[,2])
colnames(propdev.tsheall)=c("Predictor","Germination","Survival","Growth")
propdev.tsheall[,2:4]=as.numeric(propdev.tsheall[,2:4])
ord=c(1,5,2,3,9,6,7,10,11,4,8)
propdev.tsmeall2 <- propdev.tsmeall[order(ord),]
propdev.tsheall2 <- propdev.tsheall[order(ord),]
propdev.abamall2 <- propdev.abamall[order(ord),]
#choose colors
brewer.pal(9,"Paired")
#quartz(height=6.5,width=4)
quartz(height=6.5,width=5)
par(mfrow=c(3,1),mai=c(.6,.6,.2,.6), omi=c(.7,.1,.2,.2))
#par(mfrow=c(3,1),mai=c(.6,.6,.1,.1))
#x=barplot(cbind(propdev.tsmeall[1:9,],c(rep(NA,times=9))), ylab=" ", col=c("darkblue", "darkred","greenyellow","greenyellow","purple4","turquoise4","turquoise4","darorange3","darkorange3"),cex.names=1.1,cex.lab=1.1,cex.axis=1.1,xlab="Vital rate", space=c(.5,.5,.5,1), ylim=c(0,1))
#x=barplot(cbind(propdev.tsmeall[1:9,],c(rep(NA,times=9))), ylab="", col=c("darkblue", "darkred","gold1","gold1","purple4","darkgreen","darkgreen","darkorange2","darkorange2"),cex.names=1.1,cex.lab=1.1,cex.axis=1.1,xlab="", space=c(.5,.5,.5,1), ylim=c(0,1))
colors=c("darkblue","greenyellow","greenyellow", "darkred","darkgreen","darkgreen","purple4","orange4","orange4")
colors2=c("#1F78B4","#33A02C","#33A02C","#33A02C","#E31A1C","#B2DF8A","#B2DF8A","#B2DF8A","#CAB2D6","#FDBF6F","#FDBF6F")
x=barplot(cbind(propdev.tsmeall2[1:11,2:4],c(1/6,1/6,0,0,1/6,1/6,0,0,1/6,1/6,0)), ylab="", col=colors2,cex.names=1.1,cex.lab=1.1,cex.axis=1.1,xlab="", space=c(.5,.5,.5,.5),width=c(.5,.5,.5,.15), ylim=c(0,1), las=1)
#labeloc=c(c(as.numeric(propdev.tsmeall[1,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+(as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])/2),as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])+(as.numeric(propdev.tsmeall[6,2])+as.numeric(propdev.tsmeall[7,2])/2),as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])+as.numeric(propdev.tsmeall[6,2])+as.numeric(propdev.tsmeall[7,2])+(+as.numeric(propdev.tsmeall[8,2])+as.numeric(propdev.tsmeall[9,2])/2)))
#text(x[1],c(as.numeric(propdev.tsmeall[1,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[1,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])+as.numeric(propdev.tsmeall[6,2])/2),labels=propdev.tsmeall[1:9,1],pos=1)
#text(x[1],c(as.numeric(propdev.tsmeall[1,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+(as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])/2),as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])+(as.numeric(propdev.tsmeall[6,2])+as.numeric(propdev.tsmeall[7,2])/2),as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])+as.numeric(propdev.tsmeall[6,2])+as.numeric(propdev.tsmeall[7,2])+(+as.numeric(propdev.tsmeall[8,2])+as.numeric(propdev.tsmeall[9,2])/2)),labels=c("Elevation","Origin","Competition","Elevation*Origin", "Elevation*Competition","Origin*Competition"),pos=1)
labelsloc=c(1/12,3/12,5/12,7/12,9/12,11/12)
text(2.5,labelsloc,labels=c("Elevation","Competition","Origin","Elevation*Competition","Elevation*Origin","Origin*Competition"),cex=.9, adj=0)
mtext("Tsuga mertensiana",side=3,line=.5, adj=0, font=3, cex=.9)
mtext("a",side=3,line=.5, adj=-.1, cex=.9)
#ABAM
x=barplot(cbind(propdev.abamall2[1:11,2:4],c(rep(NA,times=11))), ylab="", col=colors2,cex.names=1.1,cex.lab=1.1,cex.axis=1.1,xlab="", space=c(.5,.5,.5,.5),width=c(.5,.5,.5,.15),  ylim=c(0,1), las=1)
#labelsloc=c(.2,.351,.48,.63,.83,.97)
#text(2.3,labelsloc,labels=c("Elevation","Origin","Competition","Elevation*Origin", "Elevation*Competition","Origin*Competition"),cex=.9, adj=1)
mtext("Abies amabilis",side=3,line=.5, adj=0, font=3, cex=.9)
mtext("b",side=3,line=.5, adj=-.1, cex=.9)
mtext("Proportion variance explained", side=2,line=3,cex=.9)
#TSHE
x=barplot(cbind(propdev.tsheall2[1:11,2:4],c(rep(NA,times=11))), ylab="", col=colors2,cex.names=1.1,cex.lab=1.1,cex.axis=1.1,xlab="Vital rate",space=c(.5,.5,.5,.5),width=c(.5,.5,.5,.15), ylim=c(0,1), las=1)
#labelsloc=c(.2,.351,.48,.63,.83,.97)
#text(2.3,labelsloc,labels=c("Elevation","Origin","Competition","Elevation*Origin", "Elevation*Competition","Origin*Competition"),cex=.9, adj=1)
mtext("Tsuga heterophylla",side=3,line=.5, adj=0, font=3, cex=.9)
mtext("c",side=3,line=.5, adj=-.1, cex=.9)
#Fig. 1 hypothesis graph
quartz(height=7,width=5)
par(mfrow=c(3,1),mai=c(.6,.7,.2,.1), omi=c(.7,.1,.2,.2))
x<-c(0,50,100,150,200)
#EFfect of origin
#par(new=T)
perf<-c(.4,1,1.5,1,.4)
plot(perf~x,ylab="",type="p",bty="l",xlab="",pch=21,cex=1.5,las=1, cex.axis=1.2,bg="dark gray",col.axis="white", ylim=c(0,2),xlim=c(-35,200))
polygon(c(50,50,150,150),c(0,4, 4,0),col="light gray", border="light gray")
lines(perf~x,lty=1)
points(perf~x,pch=21,cex=1.5,bg="black")
axis(2, at = c(0,2), labels = c("0","+"), tick = FALSE, cex.axis=1,las=1)
mtext("Performance", side=2, adj=.8, line=2)
mtext("a", side=3, adj=-.15, line=.8)
mtext("Observed range",adj=0.6,cex=.9, line=-.2)
origin<-as.matrix(cbind(c(.6,.4,.2),c(1.5,1,.5),c(1.08,1.5,.98),c(.5,1,1.5),c(.2,.4,.6)))
plot(origin[1,]~x,ylab="",type="p",bty="l",xlab="",pch=21,cex=1.5,las=1, cex.axis=1.2,bg="darkred",col.axis="white", ylim=c(0,2),xlim=c(-35,200))
polygon(c(50,50,150,150),c(0,4, 4,0),col="light gray", border="light gray")
lines(origin[1,]~x,lty=1)
points(origin[1,]~x,pch=21,cex=1.5,bg="black")
lines(origin[2,]~x,lty=2)
points(origin[2,]~x,pch=21,cex=1.5,bg="dark gray")
lines(origin[3,]~x,lty=3)
points(origin[3,]~x,pch=21,cex=1.5,bg="white")
axis(2, at = c(0,2), labels = c("0","+"), tick = FALSE, cex.axis=1,las=1)
mtext("Performance", side=2, adj=.8, line=2)
mtext("b", side=3, adj=-.15, line=.8)
legend(-42,2.05,legend=c("Lower limit","Mid-range", "Upper limit"),bty="n",pch=21,pt.bg=c("black","dark gray","white"),lty=c(1,2,3),angle=45,cex=.8)
mtext("Seed origin",adj=0.04,cex=.9, line=-.6)
#effect of comptition
effect<-c(-2,-1.5,-1,-.5,-.1)
q=barplot(effect, col="dark gray", col.axis="white",ylim=c(-4,4), xlim=c(0,200), yaxt="n",width=30, space=.45)
polygon(c(72,72,158,158),c(4,-4, -4,4),col="light gray", border="light gray")
par(new=T)
barplot(effect, col="dark gray", col.axis="white",ylim=c(-4,4), xlim=c(0,200), width=30, space=.45)
mtext("Effect of neighbors", adj=1,side=2, line=2)
axis(2, at = c(-4,0,4), labels = c( "-","0","+"), tick = FALSE, cex.axis=1,las=1)
abline(h=0, lwd=1, lty=2)
mtext("c", side=3, adj=-.15, line=1.5)
mtext("Limit determined by climate", adj=1.1,side=3, line=.8,cex=.9)
arrows(158,2.5,158,4,length=.1,angle=45,code=1,lwd=2)
mtext("Limit determined by competition", adj=-.15,side=3, line=.8, cex=.9)
arrows(72,2.5,72,4,length=.1,angle=45,code=1, lwd=2)
axis(1, at = q, tick = T,labels = c( "Below","Lower","Mid", "Upper", "Above"), cex.axis=.9)
mtext("Range position", line=-14)
mtext("Limit determined by competition", adj=-.18,side=3, line=.8, cex=.9)
mtext("Limit determined by competition", adj=-.15,side=3, line=1, cex=.9)
mtext("Limit determined by competition", adj=-.15,side=3, line=1.5, cex=.9)
mtext("Limit determined by competition", adj=-.15,side=3, line=1.8, cex=.9)
arrows(158,4.5,158,6,length=.1,angle=45,code=1,lwd=2)
mtext("Limit determined by competition", adj=-.15,side=3, line=1.8, cex=.9)
arrows(158,4.5,158,6,length=.1,angle=45,code=1,lwd=2)
arrows(158,3.5,158,5,length=.1,angle=45,code=1,lwd=2)
6
colors=c("darkblue","greenyellow","greenyellow", "darkred","darkgreen","darkgreen","purple4","orange4","orange4")
colors2=c("#1F78B4","#33A02C","#33A02C","#33A02C","#E31A1C","#B2DF8A","#B2DF8A","#B2DF8A","#CAB2D6","#FDBF6F","#FDBF6F")
x=barplot(cbind(propdev.tsmeall2[1:11,2:4],c(1/6,1/6,0,0,1/6,1/6,0,0,1/6,1/6,0)), ylab="", col=colors2,cex.names=1.1,cex.lab=1.1,cex.axis=1.1,xlab="", space=c(.5,.5,.5,.5),width=c(.5,.5,.5,.15), ylim=c(0,1), las=1)
#labeloc=c(c(as.numeric(propdev.tsmeall[1,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+(as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])/2),as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])+(as.numeric(propdev.tsmeall[6,2])+as.numeric(propdev.tsmeall[7,2])/2),as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])+as.numeric(propdev.tsmeall[6,2])+as.numeric(propdev.tsmeall[7,2])+(+as.numeric(propdev.tsmeall[8,2])+as.numeric(propdev.tsmeall[9,2])/2)))
#text(x[1],c(as.numeric(propdev.tsmeall[1,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[1,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])+as.numeric(propdev.tsmeall[6,2])/2),labels=propdev.tsmeall[1:9,1],pos=1)
#text(x[1],c(as.numeric(propdev.tsmeall[1,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])/2,as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+(as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])/2),as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])+(as.numeric(propdev.tsmeall[6,2])+as.numeric(propdev.tsmeall[7,2])/2),as.numeric(propdev.tsmeall[1,2])+as.numeric(propdev.tsmeall[2,2])+as.numeric(propdev.tsmeall[3,2])+as.numeric(propdev.tsmeall[4,2])+as.numeric(propdev.tsmeall[5,2])+as.numeric(propdev.tsmeall[6,2])+as.numeric(propdev.tsmeall[7,2])+(+as.numeric(propdev.tsmeall[8,2])+as.numeric(propdev.tsmeall[9,2])/2)),labels=c("Elevation","Origin","Competition","Elevation*Origin", "Elevation*Competition","Origin*Competition"),pos=1)
labelsloc=c(1/12,3/12,5/12,7/12,9/12,11/12)
text(2.5,labelsloc,labels=c("Elevation","Competition","Origin","Elevation*Competition","Elevation*Origin","Origin*Competition"),cex=.9, adj=0)
mtext("Tsuga mertensiana",side=3,line=.5, adj=0, font=3, cex=.9)
mtext("a",side=3,line=.5, adj=-.1, cex=.9)
#ABAM
x=barplot(cbind(propdev.abamall2[1:11,2:4],c(rep(NA,times=11))), ylab="", col=colors2,cex.names=1.1,cex.lab=1.1,cex.axis=1.1,xlab="", space=c(.5,.5,.5,.5),width=c(.5,.5,.5,.15),  ylim=c(0,1), las=1)
#labelsloc=c(.2,.351,.48,.63,.83,.97)
#text(2.3,labelsloc,labels=c("Elevation","Origin","Competition","Elevation*Origin", "Elevation*Competition","Origin*Competition"),cex=.9, adj=1)
mtext("Abies amabilis",side=3,line=.5, adj=0, font=3, cex=.9)
mtext("b",side=3,line=.5, adj=-.1, cex=.9)
mtext("Proportion variance explained", side=2,line=3,cex=.9)
#TSHE
x=barplot(cbind(propdev.tsheall2[1:11,2:4],c(rep(NA,times=11))), ylab="", col=colors2,cex.names=1.1,cex.lab=1.1,cex.axis=1.1,xlab="Vital rate",space=c(.5,.5,.5,.5),width=c(.5,.5,.5,.15), ylim=c(0,1), las=1)
#labelsloc=c(.2,.351,.48,.63,.83,.97)
#text(2.3,labelsloc,labels=c("Elevation","Origin","Competition","Elevation*Origin", "Elevation*Competition","Origin*Competition"),cex=.9, adj=1)
mtext("Tsuga heterophylla",side=3,line=.5, adj=0, font=3, cex=.9)
mtext("c",side=3,line=.5, adj=-.1, cex=.9)
#Fig. 1 hypothesis graph
quartz(height=7,width=5)
par(mfrow=c(3,1),mai=c(.6,.7,.2,.1), omi=c(.7,.1,.2,.2))
x<-c(0,50,100,150,200)
#EFfect of origin
#par(new=T)
perf<-c(.4,1,1.5,1,.4)
plot(perf~x,ylab="",type="p",bty="l",xlab="",pch=21,cex=1.5,las=1, cex.axis=1.2,bg="dark gray",col.axis="white", ylim=c(0,2),xlim=c(-35,200))
polygon(c(50,50,150,150),c(0,4, 4,0),col="light gray", border="light gray")
lines(perf~x,lty=1)
points(perf~x,pch=21,cex=1.5,bg="black")
axis(2, at = c(0,2), labels = c("0","+"), tick = FALSE, cex.axis=1,las=1)
mtext("Performance", side=2, adj=.8, line=2)
mtext("a", side=3, adj=-.15, line=.8)
mtext("Observed range",adj=0.6,cex=.9, line=-.2)
origin<-as.matrix(cbind(c(.6,.4,.2),c(1.5,1,.5),c(1.08,1.5,.98),c(.5,1,1.5),c(.2,.4,.6)))
plot(origin[1,]~x,ylab="",type="p",bty="l",xlab="",pch=21,cex=1.5,las=1, cex.axis=1.2,bg="darkred",col.axis="white", ylim=c(0,2),xlim=c(-35,200))
polygon(c(50,50,150,150),c(0,4, 4,0),col="light gray", border="light gray")
lines(origin[1,]~x,lty=1)
points(origin[1,]~x,pch=21,cex=1.5,bg="black")
lines(origin[2,]~x,lty=2)
points(origin[2,]~x,pch=21,cex=1.5,bg="dark gray")
lines(origin[3,]~x,lty=3)
points(origin[3,]~x,pch=21,cex=1.5,bg="white")
axis(2, at = c(0,2), labels = c("0","+"), tick = FALSE, cex.axis=1,las=1)
mtext("Performance", side=2, adj=.8, line=2)
mtext("b", side=3, adj=-.15, line=.8)
legend(-42,2.05,legend=c("Lower limit","Mid-range", "Upper limit"),bty="n",pch=21,pt.bg=c("black","dark gray","white"),lty=c(1,2,3),angle=45,cex=.8)
mtext("Seed origin",adj=0.04,cex=.9, line=-.6)
#effect of comptition
effect<-c(-2,-1.5,-1,-.5,-.1)
q=barplot(effect, col="dark gray", col.axis="white",ylim=c(-4,4), xlim=c(0,200), yaxt="n",width=30, space=.45)
polygon(c(72,72,158,158),c(4,-4, -4,4),col="light gray", border="light gray")
par(new=T)
barplot(effect, col="dark gray", col.axis="white",ylim=c(-4,4), xlim=c(0,200), width=30, space=.45)
mtext("Effect of neighbors", adj=1,side=2, line=2)
axis(2, at = c(-4,0,4), labels = c( "-","0","+"), tick = FALSE, cex.axis=1,las=1)
abline(h=0, lwd=1, lty=2)
mtext("c", side=3, adj=-.15, line=1.5)
mtext("Limit determined by climate", adj=1.1,side=3, line=.8,cex=.9)
arrows(158,4.5,158,6,length=.1,angle=45,code=1,lwd=2)
arrows(158,4.5,158,6,length=.1,angle=45,code=1,lwd=2)
mtext("Limit determined by competition", adj=-.15,side=3, line=1.8, cex=.9)
arrows(72,2.5,72,4,length=.1,angle=45,code=1, lwd=2)
arrows(72,3.5,72,5,length=.1,angle=45,code=1, lwd=2)
arrows(158,2.5,158,4,length=.1,angle=45,code=1,lwd=2)
mtext("Limit determined by competition", adj=-.15,side=3, line=1, cex=.9)
.8
mtext("Limit determined by climate", adj=1.1,side=3, line=1.2,cex=.9)
mtext("Limit determined by climate", adj=1.1,side=3, line=1.5,cex=.9)
tsmedat$PlantedStand=factor(tsmedat$PlantedStand)
tshedat$PlantedStand=factor(tshedat$PlantedStand)
abamdat$PlantedStand=factor(abamdat$PlantedStand)
tsmedat$OriginStand=factor(tsmedat$OriginStand)
tshedat$OriginStand=factor(tshedat$OriginStand)
abamdat$OriginStand=factor(abamdat$OriginStand)
tsmedat$Block=factor(tsmedat$Block)
tshedat$Block=factor(tshedat$Block)
abamdat$Block=factor(abamdat$Block)
abamdat$OriginRangeLoc<-NA
tsmedat$OriginRangeLoc<-NA
tshedat$OriginRangeLoc<-NA
abamdat[abamdat$OriginStand=="704",]$OriginRangeLoc<-"Lower"
abamdat[abamdat$OriginStand=="1603",]$OriginRangeLoc<-"Upper"
abamdat[abamdat$OriginStand=="1064"|abamdat$OriginStand=="1197",]$OriginRangeLoc<-"Mid"
tshedat[tshedat$OriginStand=="704",]$OriginRangeLoc<-"Mid"
tshedat[tshedat$OriginStand=="1197",]$OriginRangeLoc<-"Upper"
tsmedat[tsmedat$OriginStand=="1197",]$OriginRangeLoc<-"Lower"
tsmedat[tsmedat$OriginStand=="1460",]$OriginRangeLoc<-"Mid"
tsmedat[tsmedat$OriginStand=="1603",]$OriginRangeLoc<-"Upper"
#TSME
tsmesurv<-tapply(as.numeric(tsmedat$StatusDate5),list(tsmedat$Block,tsmedat$PlantedStand,tsmedat$OriginRangeLoc),sum)/tapply(as.numeric(tsmedat$StatusDate5),list(tsmedat$Block,tsmedat$PlantedStand,tsmedat$OriginRangeLoc),length)
tsmesurv.org=c(tsmesurv)
tsmeblock=c(rep(rownames(tsmesurv), times=15))
tsmeorg=c(rep("Low", times=125),rep("Mid", times=125),rep("Up", times=125))
tsmesurvorg=cbind(tsmeblock,tsmeorg,tsmesurv.org)
colnames(tsmesurvorg)=c("Block","OrgStand","Surv")
tsmesurvorg<-tsmesurvorg[-which(is.na(tsmesurvorg[,3])),]
PS=substr(tsmesurvorg[,1], 1, 4)
tsmemnsorg=tapply(as.numeric(tsmesurvorg[,3]),list(PS,tsmesurvorg[,2]),mean)
tsmesesorg=tapply(as.numeric(tsmesurvorg[,3]),list(PS,tsmesurvorg[,2]),sd)/sqrt(5)
###ABAM
abamsurv<-tapply(as.numeric(abamdat$StatusDate5),list(abamdat$Block,abamdat$PlantedStand,abamdat$OriginRangeLoc),sum)/tapply(as.numeric(abamdat$StatusDate5),list(abamdat$Block,abamdat$PlantedStand,abamdat$OriginRangeLoc),length)
abamsurv.org=c(abamsurv)
abamblock=c(rep(rownames(abamsurv), times=15))
abamorg=c(rep("Low", times=125),rep("Mid", times=125),rep("Up", times=125))
abamsurvorg=cbind(abamblock,abamorg,abamsurv.org)
###summary of GDD by elevation & gap/nongap (means)
data<-read.csv("data/AllStands_clim1.csv", header=TRUE)
(meangdd<-tapply(data$GDD_total,list(data$Canopy,data$Elevation_m),mean))
data<-data[-48,]
data<-data[-88,]
(meanlight<-tapply(data$Light_Mean,list(data$Canopy,data$Elevation_m),mean))
#######summary of slope and aspect by elevation & gap/nongap (means)
spatdat<-read.csv("data/GapSizeData.csv", header=TRUE)
(meanslope<-tapply(spatdat$Slope...,list(spatdat$Canopy,spatdat$Stand),mean))
slope.lm<-lm(spatdat$Slope...~-1+spatdat$Stand*spatdat$Canopy)
summary(slope.lm)
slope.aov<-aov(spatdat$Slope...~-1+spatdat$Stand*spatdat$Canopy)
summary(slope.aov)
(meanaspect<-tapply(spatdat$Aspect..degrees,list(spatdat$Canopy,spatdat$Stand),mean, na.rm=T))
aspect.lm<-lm(spatdat$Aspect..degrees~-1+spatdat$Stand*spatdat$Canopy)
summary(aspect.lm)
aspect.aov<-aov(spatdat$Aspect..degrees~-1+spatdat$Stand*spatdat$Canopy)
summary(aspect.aov)
#PAR Data
pardat<-read.csv("PARdata.csv", header=TRUE)
justpar<-cbind((pardat[,9]),(pardat[,10]),(pardat[,11]))
parmn<-rowMeans(justpar, na.rm=TRUE)
pardat<-read.csv("data/PARdata.csv", header=TRUE)
justpar<-cbind((pardat[,9]),(pardat[,10]),(pardat[,11]))
parmn<-rowMeans(justpar, na.rm=TRUE)
(meanpar<-tapply(parmn,list(pardat$Canopy,pardat$Stand),mean, na.rm=TRUE))
parmn<-rowMeans(justpar)
par.lm<-lm(parmn~-1+pardat$Stand*pardat$Canopy)
summary(par.lm)
par.aov<-aov(parmn~-1+pardat$Stand*pardat$Canopy)
summary(par.aov)
setwd("~/git/mora_transplant")
dat<-read.csv("data/MORAGermData20112012.csv", header=TRUE)
#Include only plots where seeds were added
dat[which(dat$TotalGerms>50&dat$SeedsAdded==50),]$TotalGerms=50
##First, select only rows in which seeds were added
addat<-dat[dat$SeedsAdded>0,]
#select out 2011 data for analysis
dat2011<-addat[addat$Year=="2011",]
#divide data by species
abamgermdat<-dat2011[dat2011$SpPlant=="ABAM",]
tsmegermdat<-dat2011[dat2011$SpPlant=="TSME",]
tshegermdat<-dat2011[dat2011$SpPlant=="TSHE",]
#remove NAs
tsmegermdat<-tsmegermdat[1:min(which(is.na(tsmegermdat$Stand)))-1,]
tshegermdat<-tshegermdat[1:min(which(is.na(tshegermdat$Stand)))-1,]
abamgermdat<-abamgermdat[1:min(which(is.na(abamgermdat$Stand)))-1,]
abamgermdat$Stand=factor(abamgermdat$Stand)
tsmegermdat$Stand=factor(tsmegermdat$Stand)
tshegermdat$Stand=factor(tshegermdat$Stand)
abamgermdat$Origin=factor(abamgermdat$Origin)
tsmegermdat$Origin=factor(tsmegermdat$Origin)
tshegermdat$Origin=factor(tshegermdat$Origin)
tsmegermdat$TotalGerms=factor(tsmegermdat$TotalGerms)
tshegermdat$TotalGerms=factor(tshegermdat$TotalGerms)
abamgermdat$TotalGerms=factor(abamgermdat$TotalGerms)
tsmegermdat$Block=factor(tsmegermdat$Block)
tshegermdat$Block=factor(tshegermdat$Block)
abamgermdat$Block=factor(abamgermdat$Block)
tsmey=cbind(tsmegermdat$TotalGerms,tsmegermdat$TotalFails)
tshey=cbind(tshegermdat$TotalGerms,tshegermdat$TotalFails)
abamy=cbind(abamgermdat$TotalGerms,abamgermdat$TotalFails)
#ABAM
#abammod<- glm(abamy~Stand+Origin+Canopy+Understory+Stand:Origin+Stand:Canopy+Stand:Understory+Origin:Canopy+Origin:Understory+Canopy:Understory+Stand:Canopy:Understory, data=abamgermdat, family=binomial)# also checked for a 3way interaction between +Origin:Canopy:Understory but not sig; warning: "glm.fit: fitted probabilities numerically 0 or 1 occurred"
abam.mmod<- glmer(abamy~-1+Stand+Origin+Canopy+Understory+Stand:Origin+Stand:Canopy+Stand:Understory+Origin:Canopy+Origin:Understory+Canopy:Understory+Stand:Canopy:Understory + (1|Block), data=abamgermdat, family=binomial)# also checked for a 3way interaction between +Origin:Canopy:Understory but not sig; warning: "glm.fit: fitted probabilities numerically 0 or 1 occurred"
Anova(abam.mmod, test.statistic="Chisq", type="III")#model failed to converge
##Model selection, by hand
abammod1<- glm(abamy~Stand+Origin+Canopy+Understory+Stand:Origin+Stand:Canopy+Stand:Understory+Origin:Canopy+Origin:Understory+Canopy:Understory, data=abamgermdat, family=binomial)# also checked for a 3way interaction between +Origin:Canopy:Understory but not sig; warning: "glm.fit: fitted probabilities numerically 0 or 1 occurred"
abam.mmod1<- glmer(abamy~Stand+Origin+Canopy+Understory+Stand:Origin+Stand:Canopy+Stand:Understory+Origin:Canopy+Origin:Understory+Canopy:Understory+ (1|Block), data=abamgermdat, family=binomial)# also checked for a 3way interaction between +Origin:Canopy:Understory but not sig; warning: "glm.fit: fitted probabilities numerically 0 or 1 occurred"
abam.mmod2<- glmer(abamy~Stand*Origin + (1|Block), data=abamgermdat, family=binomial)# still failed to converge
abammod2<- glm(abamy~Stand*Origin, data=abamgermdat, family=binomial)#
abam.mmod2a<- glmer(abamy~Canopy+Stand*Origin+ (1|Block), data=abamgermdat, family=binomial,contrasts=c(unordered="contr.sum", ordered="contr.poly"))#
abammod2a<- glm(abamy~Canopy+Stand*Origin, data=abamgermdat, family=binomial,contrasts=c(unordered="contr.sum", ordered="contr.poly"))#
abammod3<- glm(abamy~Canopy*Understory*Origin, data=abamgermdat, family=binomial)#
abam.mmod3<- glmer(abamy~Canopy*Understory*Origin+(1|Block), data=abamgermdat, family=binomial)#
abammod4<- glm(abamy~Canopy*Stand, data=abamgermdat, family=binomial)#
abammod4a<- glm(abamy~Origin+Canopy*Stand, data=abamgermdat, family=binomial)#
abam.mmod4<- glmer(abamy~Canopy*Stand+(1|Block), data=abamgermdat, family=binomial)#
abam.mmod4a<- glmer(abamy~Origin+Canopy*Stand+(1|Block), data=abamgermdat, family=binomial)#
abammod5<- glm(abamy~Understory*Stand, data=abamgermdat, family=binomial)#
abam.mmod5<- glmer(abamy~Understory*Stand+(1|Block), data=abamgermdat, family=binomial)#
abammod6<- glm(abamy~Comp*Stand, data=abamgermdat, family=binomial)#
abam.mmod6<- glmer(abamy~Comp*Stand + (1|Block), data=abamgermdat, family=binomial)#
AICctab(abammod,abammod2,abammod3,abammod4,abammod5,abammod6,abammod2a,abammod4a,logLik=T)
AICctab(abam.mmod,abam.mmod2,abam.mmod3,abam.mmod4,abam.mmod5,abam.mmod6,abam.mmod2a,abam.mmod4a,logLik=T)
Anova(abam.mmod2a, type="III")
Anova(abammod2a, type="III")
#TSME
tsmemod<- glm(tsmey~Stand+Origin+Canopy+Understory+Stand:Origin+Stand:Canopy+Stand:Understory+Origin:Canopy+Origin:Understory+Canopy:Understory+Stand:Canopy:Understory, data=tsmegermdat, family=binomial)# also checked for a 3way interaction between +Origin:Canopy:Understory but not sig, #this model has perfect linear separation problem so can't be used...standard errors=huge
tsme.mmod<- glmer(tsmey~Stand+Origin+Canopy+Understory+Stand:Origin+Stand:Canopy+Stand:Understory+Origin:Canopy+Origin:Understory+Canopy:Understory+Stand:Canopy:Understory+ (1|Block), data=tsmegermdat, family=binomial)# also checked for a 3way interaction between +Origin:Canopy:Understory but not sig, #this model has perfect linear separation problem so can't be used...standard errors=huge
tsmemoda<- glm(tsmey~Stand+Origin+Canopy+Stand:Origin+Stand:Canopy+Origin:Canopy, data=tsmegermdat, family=binomial)# also checked for a 3way interaction between +Origin:Canopy:Understory but not sig, #this model has perfect linear separation problem so can't be used...standard errors=huge
tsme.mmoda<- glmer(tsmey~Stand+Origin+Canopy+Stand:Origin+Stand:Canopy+Origin:Canopy + (1|Block), data=tsmegermdat, family=binomial)# also checked for a 3way interaction between +Origin:Canopy:Understory but not sig, #this model has perfect linear separation problem so can't be used...standard errors=huge
tsmemod2<- glm(tsmey~Stand*Origin, data=tsmegermdat, family=binomial)# also checked for a 3way int
tsme.mmod2<- glmer(tsmey~Stand*Origin+ (1|Block), data=tsmegermdat, family=binomial)# also checked for a 3way int
tsmemod3<- glm(tsmey~Origin*Canopy, data=tsmegermdat, family=binomial,contrasts=c(unordered="contr.sum", ordered="contr.poly"))#
tsme.mmod3<- glmer(tsmey~Canopy*Origin + (1|Block), data=tsmegermdat, family=binomial,contrasts=c(unordered="contr.sum", ordered="contr.poly"))#
tsmemod4<- glm(tsmey~Origin*Understory, data=tsmegermdat, family=binomial)#
tsme.mmod4<- glmer(tsmey~Origin*Understory+ (1|Block), data=tsmegermdat, family=binomial)#
tsmemod5<- glm(tsmey~Stand*Canopy, data=tsmegermdat, family=binomial)#
tsme.mmod5<- glmer(tsmey~Stand*Canopy+ (1|Block), data=tsmegermdat, family=binomial)#
AICctab(tsmemod,tsmemoda,tsmemod2,tsmemod3,tsmemod4,tsmemod5,logLik=T)
AICctab(tsme.mmod,tsme.mmoda,tsme.mmod2,tsme.mmod3,tsme.mmod4,tsme.mmod5,logLik=T)
anova(tsme.mmod3,type="III")
#tsmemod3 has lowest AIC, so I'll use that model for the table
Anova(tsmemod3,test="LR", type="II")
#Tshe
tshemod<- glm(tshey~Stand+Origin+Canopy+Understory+Stand:Origin+Stand:Canopy+Stand:Understory+Origin:Canopy+Origin:Understory+Canopy:Understory+Stand:Canopy:Understory, data=tshegermdat, family=binomial)# also checked for a 3way interaction between +Origin:Canopy:Understory but not sig
tshe.mmod<- glmer(tshey~Stand+Origin+Canopy+Understory+Stand:Origin+Stand:Canopy+Stand:Understory+Origin:Canopy+Origin:Understory+Canopy:Understory+Stand:Canopy:Understory +(1|Block), data=tshegermdat, family=binomial, REML=FALSE)# also checked for a 3way interaction between +Origin:Canopy:Understory but not sig
tshemod2<- glm(tshey~Stand*Origin, data=tshegermdat,contrasts=c(unordered="contr.sum", ordered="contr.poly"),family=binomial)#
tshe.mmod2<- glmer(tshey~Stand*Origin +(1|Block), data=tshegermdat, contrasts=c(unordered="contr.sum", ordered="contr.poly"),family=binomial)#
tshemod2a<- glm(tshey~Stand*Origin+Canopy, data=tshegermdat, family=binomial)#
tshe.mmod2a<- glmer(tshey~Stand*Origin+Canopy +(1|Block), data=tshegermdat, family=binomial, REML=FALSE)#
tshemod3<- glm(tshey~Canopy*Understory*Origin, data=tshegermdat, family=binomial)#
tshe.mmod3<- glmer(tshey~Canopy*Understory*Origin +(1|Block), data=tshegermdat, family=binomial)#
tshemod4<- glm(tshey~Canopy*Stand, data=tshegermdat, family=binomial)# couldn't fit model with both understory and canopy-
tshe.mmod4<- glmer(tshey~Canopy*Stand +(1|Block), data=tshegermdat, family=binomial)# couldn't fit model with both understory and canopy-
tshemod5<- glm(tshey~Understory*Stand, data=tshegermdat, family=binomial)# couldn't fit model with both understory and canopy-
tshe.mmod5<- glmer(tshey~Understory*Stand +(1|Block), data=tshegermdat, family=binomial)# couldn't fit model with both understory and canopy-
AICctab(tshemod,tshemod2,tshemod3,tshemod4,tshemod5,tshemod2a,logLik=T)
AICctab(tshe.mmod,tshe.mmod2,tshe.mmod3,tshe.mmod4,tshe.mmod5,tshe.mmod2a,logLik=T)
#mod2 is best fit for tshe
Anova(tshe.mmod2, test="Chisq",type="III")
Anova(tshemod2,test="LR", type="III")
AICctab(tshemod,tshemod2,tshemod3,tshemod4,tshemod5,tshemod2a,logLik=T)
library(boot)
library(car)
library(bbmle)
AICctab(tshemod,tshemod2,tshemod3,tshemod4,tshemod5,tshemod2a,logLik=T)
rm(list=ls())
options(stringsAsFactors=FALSE)
transdat<-read.csv("data/2013TransplantStatusHeight(October).csv", header=TRUE)#csv file has been sorted so that all dates appear together, all status columns are together, etc
dim(transdat)#3959 rows(=individuals),  39 columns
microclim<-read.csv("data/AllStands_clim1.csv", header=T)#this is just data from 2012;
dim(microclim)#136 rows, 15 columns
transdat$PlantedStand2<-as.numeric(transdat$PlantedStand)
transdat$PlantedStand<-as.factor(transdat$PlantedStand)
transdat$OriginStand<-as.factor(transdat$OriginStand)
transdat$Block<-as.factor(transdat$Block)
transdat$UniqueID<-as.factor(transdat$UniqueID)
transdat$Date1<-as.Date(transdat$Date1,format='%m/%d/%Y')
transdat$Date2<-as.Date(transdat$Date2,format='%m/%d/%Y')
transdat$Date3<-as.Date(transdat$Date3,format='%m/%d/%Y')
transdat$Date4<-as.Date(transdat$Date4,format='%m/%d/%Y')
transdat$Date5<-as.Date(transdat$Date5,format='%m/%d/%Y')
transdat$CompAmt.1<-as.factor(transdat$CompAmt.1)
##add columns for relative growth rate and annual relative growth rate
transdat$rgr=NA
transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$rgr=(transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$Height2-transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$Initial.Height)/transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$Initial.Height#rgr for plants that only survived 1 year
transdat[which(is.na(transdat$HeightDate5)&transdat$HeightDate4>0),]$rgr=(transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$HeightDate4-transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$Initial.Height)/transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$Initial.Height#rgr for plants that survived 2 years
transdat[which(transdat$HeightDate5>0),]$rgr=(transdat[which(transdat$HeightDate5>0),]$HeightDate5-transdat[which(transdat$HeightDate5>0),]$Initial.Height)/transdat[which(transdat$HeightDate5>0),]$Initial.Height#rgr for plants that survived 3 years
#also try just height increment/yr
transdat$hi=NA
transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$hi=(transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$Height2-transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$Initial.Height)#height incr for plants that only survived 1 year
transdat[which(is.na(transdat$HeightDate5)&transdat$HeightDate4>0),]$hi=(transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$HeightDate4-transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$Initial.Height)#height incr. for plants that survived 2 years
transdat[which(transdat$HeightDate5>0),]$hi=(transdat[which(transdat$HeightDate5>0),]$HeightDate5-transdat[which(transdat$HeightDate5>0),]$Initial.Height)#height incr for plants that survived 3 years
#create column for annual rgr and annual hi
transdat$yrs=NA
transdat$annrgr=NA
transdat$annhi=NA
#first, identify # of yrs over which growth meaured
transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$yrs=rep(1,times=dim(transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),])[1])
transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$yrs=rep(2,times=dim(transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),])[1])
transdat[which(transdat$HeightDate5>0),]$yrs=rep(3,times=dim(transdat[which(transdat$HeightDate5>0),])[1])
transdat$finalrgr=(transdat$RtCrnHeightDate5-transdat$Initial.Height)/transdat$Initial.Height
transdat$annrgr=transdat$rgr/transdat$yrs
transdat$annhi=transdat$hi/transdat$yrs
#Add column for survival data  (0=alive, 1=dead)
transdat$Death=NA
transdat[which(transdat$StatusDate5==0),]$Death=1
transdat[which(transdat$StatusDate5==1),]$Death=0
#Add column for time to death in days
transdat$StartDate=as.Date("9/1/2010",format='%m/%d/%Y')
transdat$StartDateDate5=transdat$Date5-transdat$StartDate
transdat$StartDateDate4=transdat$Date4-transdat$StartDate
transdat$StartDateDate3=transdat$Date3-transdat$StartDate
transdat$StartDateDate2=transdat$Date2-transdat$StartDate
transdat$StartDateDate1=transdat$Date1-transdat$StartDate
DaysDeath<-c()
alltime1<-c()
alltime2<-c()
for (i in 1:dim(transdat)[1]){
if(transdat$StatusDate5[i]==1)inddd<-transdat$StartDateDate5[i]
if(transdat$StatusDate5[i]==0 & transdat$StatusDate4[i]==1) inddd<-transdat$StartDateDate5[i]
if(transdat$StatusDate3[i]==1 & transdat$StatusDate4[i]==0) inddd<-transdat$StartDateDate4[i]
if(transdat$StatusDate2[i]==1 & transdat$StatusDate3[i]==0) inddd<-transdat$StartDateDate3[i]
if(transdat$StatusDate1[i]==1 & transdat$StatusDate2[i]==0) inddd<-transdat$StartDateDate2[i]
if(transdat$StatusDate1[i]==0) inddd<-transdat$StartDateDate1[i]
DaysDeath<-c(DaysDeath,inddd)
#for interval censored data, need to specificy that we know it died between which intervals
#If alive on final census, time2=NA, time1=#ofday on last census
if(transdat$StatusDate5[i]==1)time1<-transdat$StartDateDate5[i]
if(transdat$StatusDate5[i]==1)time2<-NA
#If dead on final census, but alive on 4th census, time2=#ofdaydate5, time1=#ofdaydate4
if(transdat$StatusDate5[i]==0 & transdat$StatusDate4[i]==1) time2<-transdat$StartDateDate5[i]
if(transdat$StatusDate5[i]==0 & transdat$StatusDate4[i]==1) time1<-transdat$StartDateDate4[i]
#If dead on 4th census, but alive on 3rd census, time2=#ofdaydate4, time1=#ofdaysondate3
if(transdat$StatusDate3[i]==1 & transdat$StatusDate4[i]==0) time2<-transdat$StartDateDate4[i]
if(transdat$StatusDate3[i]==1 & transdat$StatusDate4[i]==0) time1<-transdat$StartDateDate3[i]
#If dead on 3rd census, but alive on 2nd census, time2=#ofdaydate3, time1=#ofdaysondate2
if(transdat$StatusDate2[i]==1 & transdat$StatusDate3[i]==0) time2<-transdat$StartDateDate3[i]
if(transdat$StatusDate2[i]==1 & transdat$StatusDate3[i]==0) time1<-transdat$StartDateDate2[i]
#If dead on 2nd census, but alive on 1st census, time2=#ofdaydate2, time1=#ofdaysondate1
if(transdat$StatusDate1[i]==1 & transdat$StatusDate2[i]==0) time2<-transdat$StartDateDate2[i]
if(transdat$StatusDate1[i]==1 & transdat$StatusDate2[i]==0) time1<-transdat$StartDateDate1[i]
#If dead on 1st census, time2=#ofdaydate1, time1=14 (all plants checked after 2 weeks and still alive)
if(transdat$StatusDate1[i]==0) time2<-transdat$StartDateDate1[i]
if(transdat$StatusDate1[i]==0) time1<-14
alltime1<-c(alltime1,time1)
alltime2<-c(alltime2,time2)
}
transdat$DaysDeath=DaysDeath
transdat$time1=as.numeric(alltime1)
transdat$time2=alltime2
#separate out species
tsmedat<-transdat[transdat$Species=="TSME",]
tshedat<-transdat[transdat$Species=="TSHE",]
abamdat<-transdat[transdat$Species=="ABAM",]
tsmedat$PlantedStand=factor(tsmedat$PlantedStand)
tshedat$PlantedStand=factor(tshedat$PlantedStand)
abamdat$PlantedStand=factor(abamdat$PlantedStand)
tsmedat$OriginStand=factor(tsmedat$OriginStand)
tshedat$OriginStand=factor(tshedat$OriginStand)
abamdat$OriginStand=factor(abamdat$OriginStand)
tsmedat$Block=factor(tsmedat$Block)
tshedat$Block=factor(tshedat$Block)
abamdat$Block=factor(abamdat$Block)
#head(abamdat)
head(abamdat)
climdat<-read.csv("data/AllStands_clim1.csv", header=TRUE)
head(climdat)
unique(climdat$Block)
unique(abamdat$Block)
unique(transdat$Block)
is.factor(transdat$Block)
is.factor(climdat$Block)
climdat$Block<-as.factor(climdat)
climdat$Block<-as.factor(climdat$Block)
head(transdat)
transdatsub<-subset(transdat,select=c("UniqueID","Species","Block","PlantedStand","OriginStand","Canopy","Understory","time1","time2")
)
dim(transdat)
dim(transdatsub)
dim(climdat)
head(climdat)
unique(climdat$Year)
climdatstub<-subset(climdat,select=c("Stand","Block","Elevation_m","snow_appearance_date","snow_disappearance_date","snow_cover_duration","meanGST","GDD_total","Light_Mean"))
alldat <- join(transdatsub, climdatsub, by=c("Block"), match="first")
library(dplyr)
alldat <- join(transdatsub, climdatsub, by=c("Block"), match="first")
