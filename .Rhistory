##add columns for relative growth rate and annual relative growth rate
transdat$rgr=NA
transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$rgr=(transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$Height2-transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$Initial.Height)/transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$Initial.Height#rgr for plants that only survived 1 year
transdat[which(is.na(transdat$HeightDate5)&transdat$HeightDate4>0),]$rgr=(transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$HeightDate4-transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$Initial.Height)/transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$Initial.Height#rgr for plants that survived 2 years
transdat[which(transdat$HeightDate5>0),]$rgr=(transdat[which(transdat$HeightDate5>0),]$HeightDate5-transdat[which(transdat$HeightDate5>0),]$Initial.Height)/transdat[which(transdat$HeightDate5>0),]$Initial.Height#rgr for plants that survived 3 years
#also try just height increment/yr
transdat$hi=NA
transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$hi=(transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$Height2-transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$Initial.Height)#height incr for plants that only survived 1 year
transdat[which(is.na(transdat$HeightDate5)&transdat$HeightDate4>0),]$hi=(transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$HeightDate4-transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$Initial.Height)#height incr. for plants that survived 2 years
transdat[which(transdat$HeightDate5>0),]$hi=(transdat[which(transdat$HeightDate5>0),]$HeightDate5-transdat[which(transdat$HeightDate5>0),]$Initial.Height)#height incr for plants that survived 3 years
#create column for annual rgr and annual hi
transdat$yrs=NA
transdat$annrgr=NA
transdat$annhi=NA
#first, identify # of yrs over which growth meaured
transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),]$yrs=rep(1,times=dim(transdat[which(is.na(transdat$HeightDate4)& transdat$Height2>0),])[1])
transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),]$yrs=rep(2,times=dim(transdat[which(is.na(transdat$HeightDate5)& transdat$HeightDate4>0),])[1])
transdat[which(transdat$HeightDate5>0),]$yrs=rep(3,times=dim(transdat[which(transdat$HeightDate5>0),])[1])
transdat$finalrgr=(transdat$RtCrnHeightDate5-transdat$Initial.Height)/transdat$Initial.Height
transdat$annrgr=transdat$rgr/transdat$yrs
transdat$annhi=transdat$hi/transdat$yrs
#Add column for survival data  (0=alive, 1=dead)
transdat$Death=NA
transdat[which(transdat$StatusDate5==0),]$Death=1
transdat[which(transdat$StatusDate5==1),]$Death=0
#Add column for time to death in days
transdat$StartDate=as.Date("9/1/2010",format='%m/%d/%Y')
transdat$StartDateDate5=transdat$Date5-transdat$StartDate
transdat$StartDateDate4=transdat$Date4-transdat$StartDate
transdat$StartDateDate3=transdat$Date3-transdat$StartDate
transdat$StartDateDate2=transdat$Date2-transdat$StartDate
transdat$StartDateDate1=transdat$Date1-transdat$StartDate
DaysDeath<-c()
alltime1<-c()
alltime2<-c()
for (i in 1:dim(transdat)[1]){
if(transdat$StatusDate5[i]==1)inddd<-transdat$StartDateDate5[i]
if(transdat$StatusDate5[i]==0 & transdat$StatusDate4[i]==1) inddd<-transdat$StartDateDate5[i]
if(transdat$StatusDate3[i]==1 & transdat$StatusDate4[i]==0) inddd<-transdat$StartDateDate4[i]
if(transdat$StatusDate2[i]==1 & transdat$StatusDate3[i]==0) inddd<-transdat$StartDateDate3[i]
if(transdat$StatusDate1[i]==1 & transdat$StatusDate2[i]==0) inddd<-transdat$StartDateDate2[i]
if(transdat$StatusDate1[i]==0) inddd<-transdat$StartDateDate1[i]
DaysDeath<-c(DaysDeath,inddd)
#for interval censored data, need to specificy that we know it died between which intervals
#If alive on final census, time2=NA, time1=#ofday on last census
if(transdat$StatusDate5[i]==1)time1<-transdat$StartDateDate5[i]
if(transdat$StatusDate5[i]==1)time2<-NA
#If dead on final census, but alive on 4th census, time2=#ofdaydate5, time1=#ofdaydate4
if(transdat$StatusDate5[i]==0 & transdat$StatusDate4[i]==1) time2<-transdat$StartDateDate5[i]
if(transdat$StatusDate5[i]==0 & transdat$StatusDate4[i]==1) time1<-transdat$StartDateDate4[i]
#If dead on 4th census, but alive on 3rd census, time2=#ofdaydate4, time1=#ofdaysondate3
if(transdat$StatusDate3[i]==1 & transdat$StatusDate4[i]==0) time2<-transdat$StartDateDate4[i]
if(transdat$StatusDate3[i]==1 & transdat$StatusDate4[i]==0) time1<-transdat$StartDateDate3[i]
#If dead on 3rd census, but alive on 2nd census, time2=#ofdaydate3, time1=#ofdaysondate2
if(transdat$StatusDate2[i]==1 & transdat$StatusDate3[i]==0) time2<-transdat$StartDateDate3[i]
if(transdat$StatusDate2[i]==1 & transdat$StatusDate3[i]==0) time1<-transdat$StartDateDate2[i]
#If dead on 2nd census, but alive on 1st census, time2=#ofdaydate2, time1=#ofdaysondate1
if(transdat$StatusDate1[i]==1 & transdat$StatusDate2[i]==0) time2<-transdat$StartDateDate2[i]
if(transdat$StatusDate1[i]==1 & transdat$StatusDate2[i]==0) time1<-transdat$StartDateDate1[i]
#If dead on 1st census, time2=#ofdaydate1, time1=14 (all plants checked after 2 weeks and still alive)
if(transdat$StatusDate1[i]==0) time2<-transdat$StartDateDate1[i]
if(transdat$StatusDate1[i]==0) time1<-14
alltime1<-c(alltime1,time1)
alltime2<-c(alltime2,time2)
}
transdat$DaysDeath=DaysDeath
transdat$time1=as.numeric(alltime1)
transdat$time2=alltime2
tsmedat<-transdat[transdat$Species=="TSME",]
tshedat<-transdat[transdat$Species=="TSHE",]
abamdat<-transdat[transdat$Species=="ABAM",]
tsmedat$PlantedStand=factor(tsmedat$PlantedStand)
tshedat$PlantedStand=factor(tshedat$PlantedStand)
abamdat$PlantedStand=factor(abamdat$PlantedStand)
tsmedat$OriginStand=factor(tsmedat$OriginStand)
tshedat$OriginStand=factor(tshedat$OriginStand)
abamdat$OriginStand=factor(abamdat$OriginStand)
tsmedat$Block=factor(tsmedat$Block)
tshedat$Block=factor(tshedat$Block)
abamdat$Block=factor(abamdat$Block)
dim(tsmedat)#1500 rows
dim(tshedat)#960 rows
dim(abamdat)#1499 rows
#First fit models for survival with all categorial data
#ABAM
constmod.abam<-survreg(Surv(time1,time2, type="interval2")~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory, dist="lognormal", data=abamdat)
#TSME
constmod.tsme<-survreg(Surv(time1,time2, type="interval2")~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory, dist="lognormal", data=tsmedat)
#TSHE
constmod.tshe<-survreg(Surv(time1,time2, type="interval2")~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory, dist="lognormal", data=tshedat)
Anova(constmod.tsme, test.statistic="LR", type="III")
Anova(constmod.abam, test.statistic="LR", type="III")
Anova(constmod.tshe,test.statistic="LR", type="III")
#Now add microclimate data, including GDD, snowduration, and mean light for each block
climdat<-read.csv("analyses/clim_gf.csv", header=TRUE)
#Combine the climate data with the transplant data columns that we want to use for survival and growth analysis
transdatsub<-subset(transdat,select=c("UniqueID","Species","Block","PlantedStand","OriginStand","Canopy","Understory","time1","time2","annhi"))
climdat$Canopy<-"CompAbsent"
climdat[which(climdat$canopy=="N"),]$Canopy<-"CompPresent"
climdat$Understory<-"CompAbsent"
climdat[which(climdat$understory=="C"),]$Understory<-"CompPresent"
#take average across both years?
climdatsub<-subset(climdat,select=c("stand","block","Canopy","Understory","GDD_total","GDD_totaln","GST_Mean","Light_Mean","Light_GDD","MAT","snow_dur","snow_dur_cont"))
climdatsub2<-aggregate(climdatsub, by=list(climdatsub$stand,climdatsub$block,climdatsub$Canopy,climdatsub$Understory), FUN=mean,na.rm=F)
climdatsub3<-subset(climdatsub2,select=c("Group.1","Group.2","Group.3","Group.4","GDD_total","GDD_totaln","GST_Mean","Light_Mean","Light_GDD","MAT","snow_dur","snow_dur_cont"))
colnames(climdatsub3)[1:4]<-c("Stand","Block","Canopy","Understory")
climdatsub3$Block<-as.character(climdatsub3$Block)
transdatsub$Block<-as.character(transdatsub$Block)
colnames(climdatsub3)[7]<-"meanGST"
alldat <- join(transdatsub, climdatsub3, by=c("Block","Canopy","Understory"), match="all")
alldat<-subset(alldat,select=c("UniqueID","Species","Block","PlantedStand","OriginStand","Canopy","Understory","time1","time2","annhi","Canopy","Understory","GDD_total","GDD_totaln","meanGST","Light_Mean","Light_GDD","MAT","snow_dur","snow_dur_cont"))
#Ok, so now I have climate data and survival/growth data in the same place.
#separate out species
tsmedat<-alldat[alldat$Species=="TSME",]
tshedat<-alldat[alldat$Species=="TSHE",]
abamdat<-alldat[alldat$Species=="ABAM",]
tsmedat$PlantedStand=factor(tsmedat$PlantedStand)
tshedat$PlantedStand=factor(tshedat$PlantedStand)
abamdat$PlantedStand=factor(abamdat$PlantedStand)
tsmedat$OriginStand=factor(tsmedat$OriginStand)
tshedat$OriginStand=factor(tshedat$OriginStand)
abamdat$OriginStand=factor(abamdat$OriginStand)
tsmedat$Block=factor(tsmedat$Block)
tshedat$Block=factor(tshedat$Block)
abamdat$Block=factor(abamdat$Block)
tsmedat$snow_dur=as.numeric(tsmedat$snow_dur)
tshedat$snow_dur=as.numeric(tshedat$snow_dur)
abamdat$snow_dur=as.numeric(abamdat$snow_dur)
tsmedat$GDD_total=as.numeric(tsmedat$GDD_total)
tshedat$GDD_total=as.numeric(tshedat$GDD_total)
abamdat$GDD_total=as.numeric(abamdat$GDD_total)
tsmedat$meanGST=as.numeric(tsmedat$meanGST)
tshedat$meanGST=as.numeric(tshedat$meanGST)
abamdat$meanGST=as.numeric(abamdat$meanGST)
tsmedat$Light_Mean=as.numeric(tsmedat$Light_Mean)
tshedat$Light_Mean=as.numeric(tshedat$Light_Mean)
abamdat$Light_Mean=as.numeric(abamdat$Light_Mean)
tsmedat$snow_duration_cent=scale(as.numeric(tsmedat$snow_dur))
tshedat$snow_cover_duration_cent=scale(as.numeric(tshedat$snow_dur))
abamdat$snow_cover_duration_cent=scale(as.numeric(abamdat$snow_dur))
tsmedat$GDD_total_cent=scale(as.numeric(tsmedat$GDD_total))
tshedat$GDD_total_cent=scale(as.numeric(tshedat$GDD_total))
abamdat$GDD_total_cent=scale(as.numeric(abamdat$GDD_total))
tsmedat$GDD_totaln_cent=scale(as.numeric(tsmedat$GDD_totaln))
tshedat$GDD_totaln_cent=scale(as.numeric(tshedat$GDD_totaln))
abamdat$GDD_totaln_cent=scale(as.numeric(abamdat$GDD_totaln))
tsmedat$meanGST_cent=scale(as.numeric(tsmedat$meanGST))
tshedat$meanGST_cent=scale(as.numeric(tshedat$meanGST))
abamdat$meanGST_cent=scale(as.numeric(abamdat$meanGST))
tsmedat$Light_Mean_cent=scale(as.numeric(tsmedat$Light_Mean))
tshedat$Light_Mean_cent=scale(as.numeric(tshedat$Light_Mean))
abamdat$Light_Mean_cent=scale(as.numeric(abamdat$Light_Mean))
tsmedat$Light_GDD_cent=scale(as.numeric(tsmedat$Light_GDD))
tshedat$Light_GDD_cent=scale(as.numeric(tshedat$Light_GDD))
abamdat$Light_GDD_cent=scale(as.numeric(abamdat$Light_GDD))
tsmedat$MAT_cent=scale(as.numeric(tsmedat$MAT))
tshedat$MAT_cent=scale(as.numeric(tshedat$MAT))
abamdat$MAT_cent=scale(as.numeric(abamdat$MAT))
tsmedat$snow_dur_cent=scale(as.numeric(tsmedat$snow_dur))
tshedat$snow_dur_cent=scale(as.numeric(tshedat$snow_dur))
abamdat$snow_dur_cent=scale(as.numeric(abamdat$snow_dur))
tsmedat$snow_dur_cont_cent=scale(as.numeric(tsmedat$snow_dur_cont))
tshedat$snow_dur_cont_cent=scale(as.numeric(tshedat$snow_dur_cont))
abamdat$snow_dur_cont_cent=scale(as.numeric(abamdat$snow_dur_cont))
#Next step is to modify the models so that the explanatory variables are GDD and light instead of range position/treatment and
#Previous models:
#in previous preliminary analyses (available upon request), I used model selection to identify that the lognormal distirbution is best-fit for these data
#make sure that datasets are the same, regardless of explanatory variables
#"UniqueID","Species","Block","PlantedStand","OriginStand","Canopy","Understory","time1","time2","annhi","Canopy","Understory","GDD_total","GDD_totaln","meanGST","Light_Mean","Light_GDD","MAT","snow_dur","snow_dur_cont"
tsmesurvdat<-subset(tsmedat,select=c("UniqueID","Species","Block","PlantedStand","OriginStand","Canopy","Understory","time1","time2","Canopy","Understory","GDD_total_cent","GDD_totaln_cent","meanGST_cent","Light_Mean_cent","Light_GDD_cent","MAT_cent","snow_dur_cent","snow_dur_cont_cent"))
#tsmesurvdat<- tsmesurvdat[apply(tsmesurvdat, 1, function(x) all(!is.na(x))),] # only keep rows of all not na
tshesurvdat<-subset(tshedat,select=c("UniqueID","Species","Block","PlantedStand","OriginStand","Canopy","Understory","time1","time2","Canopy","Understory","GDD_total_cent","GDD_totaln_cent","meanGST_cent","Light_Mean_cent","Light_GDD_cent","MAT_cent","snow_dur_cent","snow_dur_cont_cent"))
#tshesurvdat<- tshesurvdat[apply(tshesurvdat, 1, function(x) all(!is.na(x))),] # only keep rows of all not na
abamsurvdat<-subset(abamdat,select=c("UniqueID","Species","Block","PlantedStand","OriginStand","Canopy","Understory","time1","time2","Canopy","Understory","GDD_total_cent","GDD_totaln_cent","meanGST_cent","Light_Mean_cent","Light_GDD_cent","MAT_cent","snow_dur_cent","snow_dur_cont_cent"))
#abamsurvdat<- abamsurvdat[apply(abamsurvdat, 1, function(x) all(!is.na(x))),] # only keep rows of all not na
#ABAM
constmod.abam<-survreg(Surv(time1,time2, type="interval2")~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory, dist="lognormal", data=abamsurvdat)
#TSME
constmod.tsme<-survreg(Surv(time1,time2, type="interval2")~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory, dist="lognormal", data=tsmesurvdat)
#TSHE
constmod.tshe<-survreg(Surv(time1,time2, type="interval2")~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory, dist="lognormal", data=tshesurvdat)
Anova(constmod.tsme, test.statistic="LR", type="III")
Anova(constmod.abam, test.statistic="LR", type="III")
Anova(constmod.tshe,test.statistic="LR", type="III")
#For new models, replace categorical competition and elevation variables with contuous microcliamte variables that we measured
#climate models
matmod.abam<-survreg(Surv(time1,time2, type="interval2")~MAT_cent+MAT_cent:OriginStand, dist="lognormal", data=abamsurvdat)
matmod.tsme<-survreg(Surv(time1,time2, type="interval2")~MAT_cent+MAT_cent:OriginStand, dist="lognormal", data=tsmesurvdat)
matmod.tshe<-survreg(Surv(time1,time2, type="interval2")~MAT_cent+MAT_cent:OriginStand, dist="lognormal", data=tshesurvdat)
gddmod.abam<-survreg(Surv(time1,time2, type="interval2")~GDD_total_cent+GDD_total_cent:OriginStand, dist="lognormal", data=abamsurvdat)
gddmod.tsme<-survreg(Surv(time1,time2, type="interval2")~GDD_total_cent+GDD_total_cent:OriginStand, dist="lognormal", data=tsmesurvdat)
gddmod.tshe<-survreg(Surv(time1,time2, type="interval2")~GDD_total_cent+GDD_total_cent:OriginStand, dist="lognormal", data=tshesurvdat)
gddmod2.abam<-survreg(Surv(time1,time2, type="interval2")~GDD_totaln_cent+GDD_totaln_cent:OriginStand, dist="lognormal", data=abamsurvdat)
gddmod2.tsme<-survreg(Surv(time1,time2, type="interval2")~GDD_totaln_cent+GDD_totaln_cent:OriginStand, dist="lognormal", data=tsmesurvdat)
gddmod2.tshe<-survreg(Surv(time1,time2, type="interval2")~GDD_totaln_cent+GDD_totaln_cent:OriginStand, dist="lognormal", data=tshesurvdat)
gstmod.abam<-survreg(Surv(time1,time2, type="interval2")~meanGST_cent+meanGST_cent:OriginStand, dist="lognormal", data=abamsurvdat)
gstmod.tsme<-survreg(Surv(time1,time2, type="interval2")~meanGST_cent+meanGST_cent:OriginStand, dist="lognormal", data=tsmesurvdat)
gstmod.tshe<-survreg(Surv(time1,time2, type="interval2")~meanGST_cent+meanGST_cent:OriginStand, dist="lognormal", data=tshesurvdat)
sdmod.abam<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cent+snow_dur_cent:OriginStand, dist="lognormal", data=abamsurvdat)
sdmod.tsme<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cent+snow_dur_cent:OriginStand, dist="lognormal", data=tsmesurvdat)
sdmod.tshe<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cent+snow_dur_cent:OriginStand, dist="lognormal", data=tshesurvdat)
sdmod2.abam<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cont_cent+snow_dur_cont_cent:OriginStand, dist="lognormal", data=abamsurvdat)
sdmod2.tsme<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cont_cent+snow_dur_cont_cent:OriginStand, dist="lognormal", data=tsmesurvdat)
sdmod2.tshe<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cont_cent+snow_dur_cont_cent:OriginStand, dist="lognormal", data=tshesurvdat)
#light models
lightmod.abam<-survreg(Surv(time1,time2, type="interval2")~Light_Mean_cent+Light_Mean_cent:OriginStand, dist="lognormal", data=abamsurvdat)
lightmod.tsme<-survreg(Surv(time1,time2, type="interval2")~Light_Mean_cent+Light_Mean_cent:OriginStand, dist="lognormal", data=tsmesurvdat)
lightmod.tshe<-survreg(Surv(time1,time2, type="interval2")~Light_Mean_cent+Light_Mean_cent:OriginStand, dist="lognormal", data=tshesurvdat)
lightmod2.abam<-survreg(Surv(time1,time2, type="interval2")~Light_GDD_cent+Light_GDD_cent:OriginStand, dist="lognormal", data=abamsurvdat)
lightmod2.tsme<-survreg(Surv(time1,time2, type="interval2")~Light_GDD_cent+Light_GDD_cent:OriginStand, dist="lognormal", data=tsmesurvdat)
lightmod2.tshe<-survreg(Surv(time1,time2, type="interval2")~Light_GDD_cent+Light_GDD_cent:OriginStand, dist="lognormal", data=tshesurvdat)
# Light and GDD
constgddlightmod.abam<-survreg(Surv(time1,time2, type="interval2")~GDD_total_cent+OriginStand+Light_Mean_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=abamsurvdat)
constgddlightmod.tsme<-survreg(Surv(time1,time2, type="interval2")~GDD_total_cent+OriginStand+Light_Mean_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tsmesurvdat)
constgddlightmod.tshe<-survreg(Surv(time1,time2, type="interval2")~GDD_total_cent+OriginStand+Light_Mean_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tshesurvdat)
constgdd2lightmod.abam<-survreg(Surv(time1,time2, type="interval2")~GDD_totaln_cent+OriginStand+Light_Mean_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=abamsurvdat)
constgdd2lightmod.tsme<-survreg(Surv(time1,time2, type="interval2")~GDD_totaln_cent+OriginStand+Light_Mean_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tsmesurvdat)
constgdd2lightmod.tshe<-survreg(Surv(time1,time2, type="interval2")~GDD_totaln_cent+OriginStand+Light_Mean_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tshesurvdat)
constgddlight2mod.abam<-survreg(Surv(time1,time2, type="interval2")~GDD_total_cent+OriginStand+Light_GDD_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=abamsurvdat)
constgddlight2mod.tsme<-survreg(Surv(time1,time2, type="interval2")~GDD_total_cent+OriginStand+Light_GDD_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tsmesurvdat)
constgddlight2mod.tshe<-survreg(Surv(time1,time2, type="interval2")~GDD_total_cent+OriginStand+Light_GDD_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tshesurvdat)
constgdd2light2mod.abam<-survreg(Surv(time1,time2, type="interval2")~GDD_totaln_cent+OriginStand+Light_GDD_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=abamsurvdat)
constgdd2light2mod.tsme<-survreg(Surv(time1,time2, type="interval2")~GDD_totaln_cent+OriginStand+Light_GDD_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tsmesurvdat)
constgdd2light2mod.tshe<-survreg(Surv(time1,time2, type="interval2")~GDD_totaln_cent+OriginStand+Light_GDD_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tshesurvdat)
#Light and snow duration models
constsdlightmod.abam<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cent+OriginStand+Light_Mean_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=abamsurvdat)
constsdlightmod.tsme<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cent+OriginStand+Light_Mean_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tsmesurvdat)
constsdlightmod.tshe<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cent+OriginStand+Light_Mean_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tshesurvdat)
constsdlight2mod.abam<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cent+OriginStand+Light_GDD_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=abamsurvdat)
constsdlight2mod.tsme<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cent+OriginStand+Light_GDD_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tsmesurvdat)
constsdlight2mod.tshe<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cent+OriginStand+Light_GDD_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tshesurvdat)
constsd2lightmod.abam<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cont_cent+OriginStand+Light_Mean_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=abamsurvdat)
constsd2lightmod.tsme<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cont_cent+OriginStand+Light_Mean_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tsmesurvdat)
constsd2lightmod.tshe<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cont_cent+OriginStand+Light_Mean_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tshesurvdat)
constsd2light2mod.abam<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cont_cent+OriginStand+Light_GDD_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=abamsurvdat)
constsd2light2mod.tsme<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cont_cent+OriginStand+Light_GDD_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tsmesurvdat)
constsd2light2mod.tshe<-survreg(Surv(time1,time2, type="interval2")~snow_dur_cont_cent+OriginStand+Light_GDD_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tshesurvdat)
#Light and GST models
constgstlightmod.abam<-survreg(Surv(time1,time2, type="interval2")~meanGST_cent+OriginStand+Light_Mean_cent+meanGST_cent:OriginStand+meanGST_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=abamsurvdat)
constgstlightmod.tsme<-survreg(Surv(time1,time2, type="interval2")~meanGST_cent+OriginStand+Light_Mean_cent+meanGST_cent:OriginStand+meanGST_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tsmesurvdat)
constgstlightmod.tshe<-survreg(Surv(time1,time2, type="interval2")~meanGST_cent+OriginStand+Light_Mean_cent+meanGST_cent:OriginStand+meanGST_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tshesurvdat)
constgstlight2mod.abam<-survreg(Surv(time1,time2, type="interval2")~meanGST_cent+OriginStand+Light_GDD_cent+meanGST_cent:OriginStand+meanGST_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=abamsurvdat)
constgstlight2mod.tsme<-survreg(Surv(time1,time2, type="interval2")~meanGST_cent+OriginStand+Light_GDD_cent+meanGST_cent:OriginStand+meanGST_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tsmesurvdat)
constgstlight2mod.tshe<-survreg(Surv(time1,time2, type="interval2")~meanGST_cent+OriginStand+Light_GDD_cent+meanGST_cent:OriginStand+meanGST_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tshesurvdat)
#Light and MAT models
constmatlightmod.abam<-survreg(Surv(time1,time2, type="interval2")~MAT_cent+OriginStand+Light_Mean_cent+MAT_cent:OriginStand+MAT_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=abamsurvdat)
constmatlightmod.tsme<-survreg(Surv(time1,time2, type="interval2")~MAT_cent+OriginStand+Light_Mean_cent+MAT_cent:OriginStand+MAT_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tsmesurvdat)
constmatlightmod.tshe<-survreg(Surv(time1,time2, type="interval2")~MAT_cent+OriginStand+Light_Mean_cent+MAT_cent:OriginStand+MAT_cent:Light_Mean_cent+OriginStand:Light_Mean_cent, dist="lognormal", data=tshesurvdat)
constmatlight2mod.abam<-survreg(Surv(time1,time2, type="interval2")~MAT_cent+OriginStand+Light_GDD_cent+MAT_cent:OriginStand+MAT_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=abamsurvdat)
constmatlight2mod.tsme<-survreg(Surv(time1,time2, type="interval2")~MAT_cent+OriginStand+Light_GDD_cent+MAT_cent:OriginStand+MAT_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tsmesurvdat)
constmatlight2mod.tshe<-survreg(Surv(time1,time2, type="interval2")~MAT_cent+OriginStand+Light_GDD_cent+MAT_cent:OriginStand+MAT_cent:Light_GDD_cent+OriginStand:Light_GDD_cent, dist="lognormal", data=tshesurvdat)
nullmod.abam<-survreg(Surv(time1,time2, type="interval2")~1, dist="lognormal", data=abamsurvdat)
nullmod.tsme<-survreg(Surv(time1,time2, type="interval2")~1, dist="lognormal", data=tsmesurvdat)
nullmod.tshe<-survreg(Surv(time1,time2, type="interval2")~1, dist="lognormal", data=tshesurvdat)
AICtab(nullmod.abam,constmod.abam, matmod.abam,gddmod.abam,gddmod2.abam,sdmod.abam,sdmod2.abam,gstmod.abam,lightmod.abam,lightmod2.abam,constgddlightmod.abam,constgddlight2mod.abam,constgdd2lightmod.abam,constgdd2light2mod.abam,constgstlightmod.abam,constgstlight2mod.abam,constsdlightmod.abam,constsd2lightmod.abam,constsdlight2mod.abam,constsd2light2mod.abam,constmatlightmod.abam,constmatlight2mod.abam)#lowest aic for constmod.abam-
AICtab(nullmod.tsme,constmod.tsme, matmod.tsme,gddmod.tsme,gddmod2.tsme,sdmod.tsme,sdmod2.tsme,gstmod.tsme,lightmod.tsme,lightmod2.tsme,constgddlightmod.tsme,constgddlight2mod.tsme,constgdd2lightmod.tsme,constgdd2light2mod.tsme,constgstlightmod.tsme,constgstlight2mod.tsme,constsdlightmod.tsme,constsd2lightmod.tsme,constsdlight2mod.tsme,constsd2light2mod.tsme,constmatlightmod.tsme,constmatlight2mod.tsme)#lowest aic for constmod.tsme- #
AICtab(nullmod.tshe,constmod.tshe, matmod.tshe,gddmod.tshe,gddmod2.tshe,sdmod.tshe,sdmod2.tshe,gstmod.tshe,lightmod.tshe,lightmod2.tshe,constgddlightmod.tshe,constgddlight2mod.tshe,constgdd2lightmod.tshe,constgdd2light2mod.tshe,constgstlightmod.tshe,constgstlight2mod.tshe,constsdlightmod.tshe,constsd2lightmod.tshe,constsdlight2mod.tshe,constsd2light2mod.tshe,constmatlightmod.tshe,constmatlight2mod.tshe)#lowest aic for constmod.tshe-
summary(constsdlightmod.tshe)
tsmegrdat<-subset(tsmedat,select=c("UniqueID","Species","Block","PlantedStand","OriginStand","Canopy","Understory","annhi","Canopy","Understory","GDD_total_cent","GDD_totaln_cent","meanGST_cent","Light_Mean_cent","Light_GDD_cent","MAT_cent","snow_dur_cent","snow_dur_cont_cent"))
#tsmegrdat<- tsmegrdat[apply(tsmegrdat, 1, function(x) all(!is.na(x))),] # only keep rows of all not na
tshegrdat<-subset(tshedat,select=c("UniqueID","Species","Block","PlantedStand","OriginStand","Canopy","Understory","annhi","Canopy","Understory","GDD_total_cent","GDD_totaln_cent","meanGST_cent","Light_Mean_cent","Light_GDD_cent","MAT_cent","snow_dur_cent","snow_dur_cont_cent"))
#tshegrdat<- tshegrdat[apply(tshegrdat, 1, function(x) all(!is.na(x))),] # only keep rows of all not na
abamgrdat<-subset(abamdat,select=c("UniqueID","Species","Block","PlantedStand","OriginStand","Canopy","Understory","annhi","Canopy","Understory","GDD_total_cent","GDD_totaln_cent","meanGST_cent","Light_Mean_cent","Light_GDD_cent","MAT_cent","snow_dur_cent","snow_dur_cont_cent"))
#abamgrdat<- abamgrdat[apply(abamgrdat, 1, function(x) all(!is.na(x))),] # only keep rows of all not na
#ABAM
consthimod.abam<-lmer(annhi~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory+(1|Block), data=abamgrdat)
#TSME
consthimod.tsme<-lmer(annhi~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory+(1|Block), data=tsmegrdat)
#TSHE
consthimod.tshe<-lmer(annhi~PlantedStand+OriginStand+Canopy+Understory+PlantedStand:OriginStand+PlantedStand:Canopy+PlantedStand:Understory+OriginStand:Canopy+OriginStand:Understory+Canopy:Understory+PlantedStand:Canopy:Understory+(1|Block), data=tshegrdat)
Anova(consthimod.tsme, type="III")
Anova(consthimod.abam, type="III")
Anova(consthimod.tshe, type="III")
#climate models
#MAT
mathimod.abam<-lmer(annhi~OriginStand+MAT_cent+OriginStand:MAT_cent+(1|Block), REML=FALSE, data=abamgrdat)
mathimod.tsme<-lmer(annhi~OriginStand+MAT_cent+OriginStand:MAT_cent+(1|Block), REML=FALSE, data=tsmegrdat)
mathimod.tshe<-lmer(annhi~OriginStand+MAT_cent+OriginStand:MAT_cent+(1|Block), REML=FALSE, data=tshedat)
#GDD
gddhimod.abam<-lmer(annhi~OriginStand+GDD_total_cent+OriginStand:GDD_total_cent+(1|Block), REML=FALSE, data=abamgrdat)
gddhimod.tsme<-lmer(annhi~OriginStand+GDD_total_cent+OriginStand:GDD_total_cent+(1|Block), REML=FALSE, data=tsmegrdat)
gddhimod.tshe<-lmer(annhi~OriginStand+GDD_total_cent+OriginStand:GDD_total_cent+(1|Block), REML=FALSE, data=tshegrdat)
gddhimod2.abam<-lmer(annhi~OriginStand+GDD_totaln_cent+OriginStand:GDD_totaln_cent+(1|Block), REML=FALSE, data=abamgrdat)
gddhimod2.tsme<-lmer(annhi~OriginStand+GDD_totaln_cent+OriginStand:GDD_totaln_cent+(1|Block), REML=FALSE, data=tsmegrdat)
gddhimod2.tshe<-lmer(annhi~OriginStand+GDD_totaln_cent+OriginStand:GDD_totaln_cent+(1|Block), REML=FALSE, data=tshegrdat)
#GST
gsthimod.abam<-lmer(annhi~OriginStand+meanGST_cent+OriginStand:meanGST_cent+(1|Block), REML=FALSE, data=abamgrdat)
gsthimod.tsme<-lmer(annhi~OriginStand+meanGST_cent+OriginStand:meanGST_cent+(1|Block), REML=FALSE, data=tsmegrdat)
gsthimod.tshe<-lmer(annhi~OriginStand+meanGST_cent+OriginStand:meanGST_cent+(1|Block), REML=FALSE, data=tshedat)
#Snow
sdhimod.abam<-lmer(annhi~OriginStand+snow_dur_cent+OriginStand:snow_dur_cent+(1|Block), REML=FALSE, data=abamgrdat)
sdhimod.tsme<-lmer(annhi~OriginStand+snow_dur_cent+OriginStand:snow_dur_cent+(1|Block), REML=FALSE, data=tsmegrdat)
sdhimod.tshe<-lmer(annhi~OriginStand+snow_dur_cent+OriginStand:snow_dur_cent+(1|Block), REML=FALSE, data=tshegrdat)
sdhimod2.abam<-lmer(annhi~OriginStand+snow_dur_cent+OriginStand:snow_dur_cent+(1|Block), REML=FALSE, data=abamgrdat)
sdhimod2.tsme<-lmer(annhi~OriginStand+snow_dur_cont_cent+OriginStand:snow_dur_cont_cent+(1|Block), REML=FALSE, data=tsmegrdat)
sdhimod2.tshe<-lmer(annhi~OriginStand+snow_dur_cont_cent+OriginStand:snow_dur_cont_cent+(1|Block), REML=FALSE, data=tshegrdat)
#light models
lighthimod.abam<-lmer(annhi~OriginStand+Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, consthimod, data=abamgrdat)
lighthimod.tsme<-lmer(annhi~OriginStand+Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, consthimod, data=tsmegrdat)
lighthimod.tshe<-lmer(annhi~OriginStand+Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, consthimod, data=tshegrdat)
lighthimod2.abam<-lmer(annhi~OriginStand+Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, consthimod, data=abamgrdat)
lighthimod2.tsme<-lmer(annhi~OriginStand+Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, consthimod, data=tsmegrdat)
lighthimod2.tshe<-lmer(annhi~OriginStand+Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, consthimod, data=tshegrdat)
#GDD Models AND Light models
constgddlighthimod.abam<-lmer(annhi~GDD_total_cent+OriginStand+Light_Mean_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=abamgrdat)
constgddlighthimod.tsme<-lmer(annhi~GDD_total_cent+OriginStand+Light_Mean_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constgddlighthimod.tshe<-lmer(annhi~GDD_total_cent+OriginStand+Light_Mean_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tshegrdat)
constgddlight2himod.abam<-lmer(annhi~GDD_total_cent+OriginStand+Light_GDD_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=abamgrdat)
constgddlight2himod.tsme<-lmer(annhi~GDD_total_cent+OriginStand+Light_GDD_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constgddlight2himod.tshe<-lmer(annhi~GDD_total_cent+OriginStand+Light_GDD_cent+GDD_total_cent:OriginStand+GDD_total_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tshegrdat)
constgdd2lighthimod.abam<-lmer(annhi~GDD_totaln_cent+OriginStand+Light_Mean_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=abamgrdat)
constgdd2lighthimod.tsme<-lmer(annhi~GDD_totaln_cent+OriginStand+Light_Mean_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constgdd2lighthimod.tshe<-lmer(annhi~GDD_totaln_cent+OriginStand+Light_Mean_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tshegrdat)
constgdd2light2himod.abam<-lmer(annhi~GDD_totaln_cent+OriginStand+Light_GDD_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=abamgrdat)
constgdd2light2himod.tsme<-lmer(annhi~GDD_totaln_cent+OriginStand+Light_GDD_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constgdd2light2himod.tshe<-lmer(annhi~GDD_totaln_cent+OriginStand+Light_GDD_cent+GDD_totaln_cent:OriginStand+GDD_totaln_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tshegrdat)
#Snow AND Light models
constsdlighthimod.abam<-lmer(annhi~snow_dur_cent+OriginStand+Light_Mean_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=abamgrdat)
constsdlighthimod.tsme<-lmer(annhi~snow_dur_cent+OriginStand+Light_Mean_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constsdlighthimod.tshe<-lmer(annhi~snow_dur_cent+OriginStand+Light_Mean_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tshegrdat)
constsdlight2himod.abam<-lmer(annhi~snow_dur_cent+OriginStand+Light_GDD_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=abamgrdat)
constsdlight2himod.tsme<-lmer(annhi~snow_dur_cent+OriginStand+Light_GDD_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constsdlight2himod.tshe<-lmer(annhi~snow_dur_cent+OriginStand+Light_GDD_cent+snow_dur_cent:OriginStand+snow_dur_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tshegrdat)
constsd2lighthimod.abam<-lmer(annhi~snow_dur_cont_cent+OriginStand+Light_Mean_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=abamgrdat)
constsd2lighthimod.tsme<-lmer(annhi~snow_dur_cont_cent+OriginStand+Light_Mean_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constsd2lighthimod.tshe<-lmer(annhi~snow_dur_cont_cent+OriginStand+Light_Mean_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tshegrdat)
constsd2light2himod.abam<-lmer(annhi~snow_dur_cont_cent+OriginStand+Light_GDD_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=abamgrdat)
constsd2light2himod.tsme<-lmer(annhi~snow_dur_cont_cent+OriginStand+Light_GDD_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constsd2light2himod.tshe<-lmer(annhi~snow_dur_cont_cent+OriginStand+Light_GDD_cent+snow_dur_cont_cent:OriginStand+snow_dur_cont_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tshegrdat)
#GST and light models
constgstlighthimod.abam<-lmer(annhi~meanGST_cent+OriginStand+Light_Mean_cent+meanGST_cent:OriginStand+meanGST_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=abamgrdat)
constgstlighthimod.tsme<-lmer(annhi~meanGST_cent+OriginStand+Light_Mean_cent+meanGST_cent:OriginStand+meanGST_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constgstlighthimod.tshe<-lmer(annhi~meanGST_cent+OriginStand+Light_Mean_cent+meanGST_cent:OriginStand+meanGST_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tshegrdat)
constgstlight2himod.abam<-lmer(annhi~meanGST_cent+OriginStand+Light_GDD_cent+meanGST_cent:OriginStand+meanGST_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=abamgrdat)
constgstlight2himod.tsme<-lmer(annhi~meanGST_cent+OriginStand+Light_GDD_cent+meanGST_cent:OriginStand+meanGST_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constgstlight2himod.tshe<-lmer(annhi~meanGST_cent+OriginStand+Light_GDD_cent+meanGST_cent:OriginStand+meanGST_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tshegrdat)
#MAT and light models
constmatlighthimod.abam<-lmer(annhi~MAT_cent+OriginStand+Light_Mean_cent+MAT_cent:OriginStand+MAT_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=abamgrdat)
constmatlighthimod.tsme<-lmer(annhi~MAT_cent+OriginStand+Light_Mean_cent+MAT_cent:OriginStand+MAT_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constmatlighthimod.tshe<-lmer(annhi~MAT_cent+OriginStand+Light_Mean_cent+MAT_cent:OriginStand+MAT_cent:Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tshegrdat)
constmatlight2himod.abam<-lmer(annhi~MAT_cent+OriginStand+Light_GDD_cent+MAT_cent:OriginStand+MAT_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=abamgrdat)
constmatlight2himod.tsme<-lmer(annhi~MAT_cent+OriginStand+Light_GDD_cent+MAT_cent:OriginStand+MAT_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tsmegrdat)
constmatlight2himod.tshe<-lmer(annhi~MAT_cent+OriginStand+Light_GDD_cent+MAT_cent:OriginStand+MAT_cent:Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tshegrdat)
nullhimod.abam<-lmer(annhi~1+(1|Block), REML=FALSE, data=abamgrdat)
nullhimod.tsme<-lmer(annhi~1+(1|Block), REML=FALSE, data=tsmegrdat)
nullhimod.tshe<-lmer(annhi~1+(1|Block), REML=FALSE, data=tshegrdat)
AICtab(nullhimod.abam,consthimod.abam, mathimod.abam,gddhimod.abam,gddhimod2.abam,sdhimod.abam,sdhimod2.abam,gsthimod.abam,lighthimod.abam,lighthimod2.abam,constgddlighthimod.abam,constgddlight2himod.abam,constgdd2lighthimod.abam,constgdd2light2himod.abam,constgstlighthimod.abam,constgstlight2himod.abam,constsdlighthimod.abam,constsd2lighthimod.abam,constsdlight2himod.abam,constsd2light2himod.abam,constmatlighthimod.abam,constmatlight2himod.abam)#lowest aic for consthihimod.abam-
AICtab(nullhimod.tsme,consthimod.tsme, mathimod.tsme,gddhimod.tsme,gddhimod2.tsme,sdhimod.tsme,sdhimod2.tsme,gsthimod.tsme,lighthimod.tsme,lighthimod2.tsme,constgddlighthimod.tsme,constgddlight2himod.tsme,constgdd2lighthimod.tsme,constgdd2light2himod.tsme,constgstlighthimod.tsme,constgstlight2himod.tsme,constsdlighthimod.tsme,constsd2lighthimod.tsme,constsdlight2himod.tsme,constsd2light2himod.tsme,constmatlighthimod.tsme,constmatlight2himod.tsme)#lowest aic for consthihimod.tsme- #
AICtab(nullhimod.tshe,consthimod.tshe, mathimod.tshe,gddhimod.tshe,gddhimod2.tshe,sdhimod.tshe,sdhimod2.tshe,gsthimod.tshe,lighthimod.tshe,lighthimod2.tshe,constgddlighthimod.tshe,constgddlight2himod.tshe,constgdd2lighthimod.tshe,constgdd2light2himod.tshe,constgstlighthimod.tshe,constgstlight2himod.tshe,constsdlighthimod.tshe,constsd2lighthimod.tshe,constsdlight2himod.tshe,constsd2light2himod.tshe,constmatlighthimod.tshe,constmatlight2himod.tshe)#lowest aic for consthihimod.tshe-
#Ge
lighthimod.abam<-lmer(annhi~OriginStand+Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, consthimod, data=abamgrdat)
lighthimod.abam<-lmer(annhi~OriginStand+Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=abamgrdat)
lighthimod.tsme<-lmer(annhi~OriginStand+Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tsmegrdat)
lighthimod.tshe<-lmer(annhi~OriginStand+Light_Mean_cent+OriginStand:Light_Mean_cent+(1|Block), REML=FALSE, data=tshegrdat)
lighthimod2.abam<-lmer(annhi~OriginStand+Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=abamgrdat)
lighthimod2.tsme<-lmer(annhi~OriginStand+Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tsmegrdat)
lighthimod2.tshe<-lmer(annhi~OriginStand+Light_GDD_cent+OriginStand:Light_GDD_cent+(1|Block), REML=FALSE, data=tshegrdat)
AICtab(nullhimod.abam,consthimod.abam, mathimod.abam,gddhimod.abam,gddhimod2.abam,sdhimod.abam,sdhimod2.abam,gsthimod.abam,lighthimod.abam,lighthimod2.abam,constgddlighthimod.abam,constgddlight2himod.abam,constgdd2lighthimod.abam,constgdd2light2himod.abam,constgstlighthimod.abam,constgstlight2himod.abam,constsdlighthimod.abam,constsd2lighthimod.abam,constsdlight2himod.abam,constsd2light2himod.abam,constmatlighthimod.abam,constmatlight2himod.abam)#lowest aic for consthihimod.abam-
AICtab(nullhimod.tsme,consthimod.tsme, mathimod.tsme,gddhimod.tsme,gddhimod2.tsme,sdhimod.tsme,sdhimod2.tsme,gsthimod.tsme,lighthimod.tsme,lighthimod2.tsme,constgddlighthimod.tsme,constgddlight2himod.tsme,constgdd2lighthimod.tsme,constgdd2light2himod.tsme,constgstlighthimod.tsme,constgstlight2himod.tsme,constsdlighthimod.tsme,constsd2lighthimod.tsme,constsdlight2himod.tsme,constsd2light2himod.tsme,constmatlighthimod.tsme,constmatlight2himod.tsme)#lowest aic for consthihimod.tsme- #
AICtab(nullhimod.tshe,consthimod.tshe, mathimod.tshe,gddhimod.tshe,gddhimod2.tshe,sdhimod.tshe,sdhimod2.tshe,gsthimod.tshe,lighthimod.tshe,lighthimod2.tshe,constgddlighthimod.tshe,constgddlight2himod.tshe,constgdd2lighthimod.tshe,constgdd2light2himod.tshe,constgstlighthimod.tshe,constgstlight2himod.tshe,constsdlighthimod.tshe,constsd2lighthimod.tshe,constsdlight2himod.tshe,constsd2light2himod.tshe,constmatlighthimod.tshe,constmatlight2himod.tshe)#lowest aic for consthihimod.tshe-
ggermdat<-read.csv("data/AllGreenhouseGerm.csv", head=T)
ggermdat$grate<-ggermdat$SeedsGerm/ggermdat$SeedsSown
ggermdat$SeedsFail<-ggermdat$SeedsSown-ggermdat$SeedsGerm
ggermdat$yrsstore<-ggermdat$YearSown-ggermdat$YearCollected# number of years stored before sowing
ggermdat$Flat2<-paste(ggermdat$YearSown,ggermdat$Flat,sep=".")
ggermdat$YearCollected<-as.factor(ggermdat$YearCollected)
tsmeggerm<-ggermdat[ggermdat$Species=="TSME",]
tsheggerm<-ggermdat[ggermdat$Species=="TSHE",]
abamggerm<-ggermdat[ggermdat$Species=="ABAM",]
#models for supplemental
gmod.abam<-glm(cbind(abamggerm$SeedsGerm,abamggerm$SeedsFail)~SourceStand+YearCollected+yrsstore, data=abamggerm, family=binomial)
summary(gmod.abam)
Anova(gmod.abam)
gmod.tsme<-glm(cbind(tsmeggerm$SeedsGerm,tsmeggerm$SeedsFail)~SourceStand+YearCollected+yrsstore, data=tsmeggerm, family=binomial)
summary(gmod.tsme)
anova(gmod.tsme)
gmod.tshe<-glm(cbind(tsheggerm$SeedsGerm,tsheggerm$SeedsFail)~SourceStand+YearCollected+yrsstore, data=tsheggerm, family=binomial)
summary(gmod.tshe)
anova(gmod.tshe)
#years stored has negative effect on germination for TSHE but no other species
ggermdat09<-ggermdat[which(ggermdat$YearCollected==2009),]
ggermdat10<-ggermdat[which(ggermdat$YearCollected==2010),]
ggermdat09[which(ggermdat09$Elevation=="1191" & ggermdat09$Species=="ABAM"),]$Elevation<-1069
gmean09<-tapply(ggermdat09$grate,list(ggermdat09$Species,ggermdat09$Elevation,ggermdat09$YearSown), mean,na.rm=T)
gmean10<-tapply(ggermdat10$grate,list(ggermdat10$Species,ggermdat10$Elevation,ggermdat10$YearSown), mean,na.rm=T)
gsd09<-tapply(ggermdat09$grate,list(ggermdat09$Species,ggermdat09$Elevation,ggermdat09$YearSown), sd,na.rm=T)
gsd10<-tapply(ggermdat10$grate,list(ggermdat10$Species,ggermdat10$Elevation,ggermdat10$YearSown), sd,na.rm=T)
gn09<-tapply(ggermdat09$grate,list(ggermdat09$Species,ggermdat09$Elevation,ggermdat09$YearSown), length)
gn10<-tapply(ggermdat10$grate,list(ggermdat10$Species,ggermdat10$Elevation,ggermdat10$YearSown), length)
gse09<-gsd09/sqrt(gn09)
gse10<-gsd10/sqrt(gn10)
#now look at field germination data
addat$TotalGerms<-as.numeric(addat$TotalGerms)
addat$grate<-addat$TotalGerms/addat$SeedsAdded
germdat<-read.csv("data/MORAGermData20112012.csv", header=TRUE)
germdat[which(germdat$TotalGerms>50 &germdat$SeedsAdded==50),]$TotalGerms=50
##First, select only rows in which seeds were added
addat<-germdat[germdat$SeedsAdded>0,]
#select out 2011 data for analysis
dat2011<-addat[addat$Year=="2011",]
colnames(dat2011)[2]<-"Stand"
addat$TotalGerms<-as.numeric(addat$TotalGerms)
addat$grate<-addat$TotalGerms/addat$SeedsAdded
fieldgmean<-tapply(addat$grate,list(addat$SpPlant,addat$Origin,addat$Year), mean,na.rm=T)
fieldsd<-tapply(addat$grate,list(addat$SpPlant,addat$Origin,addat$Year), sd,na.rm=T)
fieldn<-tapply(addat$grate,list(addat$SpPlant,addat$Origin,addat$Year), length)
fieldse<-fieldsd/sqrt(fieldn)
#Figure of germination in the greenhouse, for supplemental
quartz(height=7,width=7)
par(mfcol=c(3,2),mai=c(.6,.7,.2,.1), omi=c(.7,.01,.2,.1))
X<-c(1,2,3,4,5)
#TSME
plot(gmean09[3,,]~X,ylab="",xlab="",xlim=c(1,5),col.axis="white",ylim=c(0,0.6),type="p",bty="l",pch=21,cex=1.5,las=1,bg=c(NA,NA,"black","gray","white"), cex.main=1.3)#ylim=c(0,.03) for inconsistent yaxes
axis(2,at=c(0,.1,.2,.3,.4,.5,.6),las=1, cex.axis=1.3)
mtext("Greenhouse",side=3,line=1.5, adj=0)
mtext("Tsuga mertensiana",side=3,line=.2, adj=0, font=3)
mtext("a",side=3,line=.2, adj=-.1)
for (i in 1:5){
arrows(X[i],gmean09[3,i,]-gse09[3,i,],X[i],gmean09[3,i,]+gse09[3,i,],length=.05,angle=90,code=0)}
for (i in 1:5){
arrows(X[i],gmean10[3,i,1]-gse10[3,i,1],X[i],gmean10[3,i,1]+gse10[3,i,1],length=.05,angle=90,code=0)}
legend(1,.6,legend=c("2009","2010", "2010"),pch=c(21,22),pt.bg=c("black"),angle=45,cex=1.1, pt.cex=1.5)
#Figure of germination in the greenhouse, for supplemental
quartz(height=7,width=7)
par(mfcol=c(3,2),mai=c(.6,.7,.2,.1), omi=c(.7,.01,.2,.1))
X<-c(1,2,3,4,5)
#TSME
plot(gmean09[3,,]~X,ylab="",xlab="",xlim=c(1,5),col.axis="white",ylim=c(0,0.6),type="p",bty="l",pch=21,cex=1.5,las=1,bg=c(NA,NA,"black","gray","white"), cex.main=1.3)#ylim=c(0,.03) for inconsistent yaxes
axis(2,at=c(0,.1,.2,.3,.4,.5,.6),las=1, cex.axis=1.3)
mtext("Greenhouse",side=3,line=1.5, adj=0)
mtext("Tsuga mertensiana",side=3,line=.2, adj=0, font=3)
mtext("a",side=3,line=.2, adj=-.1)
for (i in 1:5){
arrows(X[i],gmean09[3,i,]-gse09[3,i,],X[i],gmean09[3,i,]+gse09[3,i,],length=.05,angle=90,code=0)}
for (i in 1:5){
arrows(X[i],gmean10[3,i,1]-gse10[3,i,1],X[i],gmean10[3,i,1]+gse10[3,i,1],length=.05,angle=90,code=0)}
#for (i in 1:5){
#  arrows(X[i],gmean10[3,i,2]-gse10[3,i,2],X[i],gmean10[3,i,2]+gse10[3,i,2],length=.05,angle=90,code=0)}
points(gmean09[3,,]~X,pch=21,cex=1.5,bg=c(NA,NA,"black","gray","white"))
points(gmean10[3,,1]~X,pch=22,cex=1.5,bg=c(NA,NA,"black","gray","white"))
#points(gmean10[3,,2]~X,pch=23,cex=1.5,bg=c(NA,NA,"black","gray","white"))
legend(1,.6,legend=c("2009","2010"),pch=c(21,22),pt.bg=c("black"),angle=45,cex=1.1, pt.cex=1.5)
quartz(height=7,width=7)
par(mfcol=c(3,2),mai=c(.6,.7,.2,.1), omi=c(.7,.01,.2,.1))
X<-c(1,2,3,4,5)
#TSME
plot(gmean09[3,,]~X,ylab="",xlab="",xlim=c(1,5),col.axis="white",ylim=c(0,0.6),type="p",bty="l",pch=21,cex=1.5,las=1,bg=c(NA,NA,"black","gray","white"), cex.main=1.3)#ylim=c(0,.03) for inconsistent yaxes
axis(2,at=c(0,.1,.2,.3,.4,.5,.6),las=1, cex.axis=1.3)
mtext("Greenhouse",side=3,line=1.5, adj=0)
mtext("Tsuga mertensiana",side=3,line=.2, adj=0, font=3)
mtext("a",side=3,line=.2, adj=-.1)
for (i in 1:5){
arrows(X[i],gmean09[3,i,]-gse09[3,i,],X[i],gmean09[3,i,]+gse09[3,i,],length=.05,angle=90,code=0)}
for (i in 1:5){
arrows(X[i],gmean10[3,i,2]-gse10[3,i,2],X[i],gmean10[3,i,2]+gse10[3,i,2],length=.05,angle=90,code=0)}
points(gmean09[3,,]~X,pch=21,cex=1.5,bg=c(NA,NA,"black","gray","white"))
points(gmean10[3,,2]~X,pch=22,cex=1.5,bg=c(NA,NA,"black","gray","white"))
legend(1,.6,legend=c("2009","2010"),pch=c(21,22),pt.bg=c("black"),angle=45,cex=1.1, pt.cex=1.5)
plot(gmean09[1,,]~X,ylab="",xlab="",xlim=c(1,5),col.axis="white",ylim=c(0,0.6),type="p",bty="l",pch=21,cex=1.5,las=1,bg=c(NA,NA,"black","gray","white"), cex.main=1.3)#ylim=c(0,.03) for inconsistent yaxes
axis(2,at=c(0,.1,.2,.3,.4,.5,.6),las=1, cex.axis=1.3)
mtext("Abies amabilis",side=3,line=.2, adj=0, font=3)
mtext("b",side=3,line=.2, adj=-.1)
for (i in 1:5){
arrows(X[i],gmean09[1,i,]-gse09[1,i,],X[i],gmean09[1,i,]+gse09[1,i,],length=.05,angle=90,code=0)}
for (i in 1:5){
arrows(X[i],gmean10[1,i,1]-gse10[1,i,1],X[i],gmean10[1,i,1]+gse10[1,i,1],length=.05,angle=90,code=0)}
points(gmean09[1,,]~X,pch=21,cex=1.5,bg=c("black","gray",NA,NA,"white"))
points(gmean10[1,,1]~X,pch=22,cex=1.5,bg=c("black","gray",NA,NA,"white"))
mtext("Proportion Seeds Germinating", side=2, line=3)
plot(gmean09[2,,]~X,ylab="",xlab="",xlim=c(1,5),col.axis="white",ylim=c(0,0.6),type="p",bty="l",pch=21,cex=1.5,las=1,bg=c("black","gray","white"), cex.main=1.3)#ylim=c(0,.03) for inconsistent yaxes
axis(2,at=c(0,.1,.2,.3,.4,.5,.6),las=1, cex.axis=1.3)
for (i in 1:5){
arrows(X[i],gmean09[2,i,]-gse09[2,i,],X[i],gmean09[2,i,]+gse09[2,i,],length=.05,angle=90,code=0)}
for (i in 1:5){
arrows(X[i],gmean10[2,i,1]-gse10[2,i,1],X[i],gmean10[2,i,1]+gse10[2,i,1],length=.05,angle=90,code=0)}
points(gmean09[2,,]~X,pch=21,cex=1.5,bg=c("gray",NA,"white",NA,NA))
points(gmean10[2,,1]~X,pch=22,cex=1.5,bg=c("gray",NA,"white",NA,NA))
mtext("Tsuga heterophylla",side=3,line=.2, adj=0, font=3)
mtext("c",side=3,line=.2, adj=-.1)
mtext ("Elevation of seed origin population (m)", line=-13, cex=.9)
axis(1, at = c(1,2,3,4,5), labels = colnames(gmean09), tick = FALSE, cex.axis=1.1, line=-.5)
plot(fieldgmean[3,,1]~X[3:5],ylab="",xlab="",xlim=c(1,5),col.axis="white",ylim=c(0,0.6),type="p",bty="l",pch=21,cex=1.5,las=1,bg=c("black","gray","white"), cex.main=1.3)#ylim=c(0,.03) for inconsistent yaxes
axis(2,at=c(0,.1,.2,.3,.4,.5,.6),las=1, cex.axis=1.3)
mtext("Tsuga mertensiana",side=3,line=.2, adj=0, font=3)
mtext("d",side=3,line=.2, adj=-.1)
mtext("Mt. Rainier",side=3,line=1.5, adj=0)
arrows(X[3:5],fieldgmean[3,,1]-fieldse[3,,1],X[3:5],fieldgmean[3,,1]+fieldse[3,,1],length=.05,angle=90,code=0)
arrows(X[3:5],fieldgmean[3,,2]-fieldse[3,,2],X[3:5],fieldgmean[3,,2]+fieldse[3,,2],length=.05,angle=90,code=0)
points(fieldgmean[3,,1]~X[3:5],pch=21,cex=1.5,bg=c("black","gray","white"))
points(fieldgmean[3,,2]~X[3:5],pch=22,cex=1.5,bg=c("black","gray","white"))
##ABAM
elevs=c(1,2,5)
plot(fieldgmean[1,,1]~X[elevs],ylab="",xlab="",xlim=c(1,5),col.axis="white",ylim=c(0,0.6),type="p",bty="l",pch=21,cex=1.5,las=1,bg=c("black","gray","white"), cex.main=1.3)#ylim=c(0,.03) for inconsistent yaxes
axis(2,at=c(0,.1,.2,.3,.4,.5,.6),las=1, cex.axis=1.3)
mtext("Abies amabilis",side=3,line=.2, adj=0, font=3)
mtext("e",side=3,line=.2, adj=-.1)
arrows(X[elevs],fieldgmean[1,,1]-fieldse[1,,1],X[elevs],fieldgmean[1,,1]+fieldse[1,,1],length=.05,angle=90,code=0)
arrows(X[elevs],fieldgmean[1,,2]-fieldse[1,,2],X[elevs],fieldgmean[1,,2]+fieldse[1,,2],length=.05,angle=90,code=0)
points(fieldgmean[1,,1]~X[elevs],pch=21,cex=1.5,bg=c("black","gray","white"))
points(fieldgmean[1,,2]~X[elevs],pch=22,cex=1.5,bg=c("black","gray","white"))
##TSHE
elevs=c(NA,1,3)
plot(fieldgmean[2,,1]~X[elevs],ylab="",xlab="",xlim=c(1,5),col.axis="white",ylim=c(0,0.6),type="p",bty="l",pch=21,cex=1.5,las=1,bg=c(NA,"gray","white"), cex.main=1.3)#ylim=c(0,.03) for inconsistent yaxes
axis(2,at=c(0,.1,.2,.3,.4,.5,.6),las=1, cex.axis=1.3)
arrows(X[elevs],fieldgmean[2,,1]-fieldse[2,,1],X[elevs],fieldgmean[2,,1]+fieldse[2,,1],length=.05,angle=90,code=0)
arrows(X[elevs],fieldgmean[2,,2]-fieldse[2,,2],X[elevs],fieldgmean[2,,2]+fieldse[2,,2],length=.05,angle=90,code=0)
points(fieldgmean[2,,1]~X[elevs],pch=21,cex=1.5,bg=c(NA,"gray","white"))
points(fieldgmean[2,,2]~X[elevs],pch=22,cex=1.5,bg=c(NA,"gray","white"))
mtext("Tsuga heterophylla",side=3,line=.2, adj=0, font=3)
mtext("f",side=3,line=.2, adj=-.1)
mtext ("Elevation of seed origin population (m)", line=-13, cex=.9)
axis(1, at = c(1,2,3,4,5), labels = colnames(gmean09), tick = FALSE, cex.axis=1.1, line=-.5)
